{
  "hash": "4fb3e617d12857759147027132532491",
  "result": {
    "markdown": "---\ntitle: \"13 - The ggplot2 plotting system: ggplot()\"\nauthor:\n  - name: Leonardo Collado Torres\n    url: http://lcolladotor.github.io/\n    affiliations:\n      - id: libd\n        name: Lieber Institute for Brain Development\n        url: https://libd.org/\n      - id: jhsph\n        name: Johns Hopkins Bloomberg School of Public Health Department of Biostatistics\n        url: https://publichealth.jhu.edu/departments/biostatistics\ndescription: \"An overview of the ggplot2 plotting system in R with ggplot()\"\ncategories: [module 3, week 3, R, programming, ggplot2, data viz]\n---\n\n\n*This lecture, as the rest of the course, is adapted from the version [Stephanie C. Hicks](https://www.stephaniehicks.com/) designed and maintained in 2021 and 2022. Check the recent changes to this file through the [GitHub history](https://github.com/lcolladotor/jhustatcomputing2023/commits/main/posts/13-ggplot2-plotting-system-part-2/index.qmd).*\n\n<!-- Add interesting quote -->\n\n# Pre-lecture materials\n\n### Read ahead\n\n::: callout-note\n## Read ahead\n\n**Before class, you can prepare by reading the following materials:**\n\n1.  <https://r4ds.had.co.nz/data-visualisation>\n2.  <http://vita.had.co.nz/papers/layered-grammar.pdf>\n:::\n\nI also highlighted these two free online books:\n\n1.  *ggplot2: Elegant Graphics for Data Analysis (3e)* <https://ggplot2-book.org/>\n2.  *R Graphics Cookbook, 2nd edition* <https://r-graphics.org/>\n\n### Acknowledgements\n\nMaterial for this lecture was borrowed and adopted from\n\n-   <https://rdpeng.github.io/Biostat776/lecture-the-ggplot2-plotting-system-part-2>\n\n# Learning objectives\n\n::: callout-note\n# Learning objectives\n\n**At the end of this lesson you will:**\n\n-   Be able to build up layers of graphics using `ggplot()`\n-   Be able to modify properties of a `ggplot()` including layers and labels\n:::\n\n# The ggplot2 Plotting System\n\nIn this lesson, we will get into a little more of the nitty gritty of **how `ggplot2` builds plots** and how you can customize various aspects of any plot.\n\nPreviously, we used the `qplot()` function to quickly put points on a page.\n\n-   The `qplot()` function's syntax is very similar to that of the `plot()` function in base graphics so for those switching over, it makes for an easy transition.\n\nBut it is worth knowing the underlying details of how `ggplot2` works so that you can really exploit its power.\n\n## Basic components of a ggplot2 plot\n\n::: callout-tip\n### Key components\n\nA **`ggplot2` plot** consists of a number of **key components**.\n\n-   A **data frame**: stores all of the data that will be displayed on the plot\n\n-   **aesthetic mappings**: describe how data are mapped to color, size, shape, location\n\n-   **geoms**: geometric objects like points, lines, shapes\n\n-   **facets**: describes how conditional/panel plots should be constructed\n\n-   **stats**: statistical transformations like binning, quantiles, smoothing\n\n-   **scales**: what scale an aesthetic map uses (example: left-handed = red, right-handed = blue)\n\n-   **coordinate system**: describes the system in which the locations of the geoms will be drawn\n:::\n\nIt is **essential to organize your data into a data frame** before you start with `ggplot2` (and all the **appropriate metadata** so that your data frame is self-describing and your plots will be self-documenting).\n\nWhen **building plots in `ggplot2`** (rather than using `qplot()`), the **\"artist's palette\" model may be the closest analogy**.\n\nEssentially, you start with some raw data, and then you **gradually add bits and pieces to it to create a plot**.\n\n::: callout-tip\n### Note\n\nPlots are built up in layers, with the typically ordering being\n\n1.  Plot the data\n2.  Overlay a summary\n3.  Add metadata and annotation\n:::\n\nFor quick exploratory plots you may not get past step 1.\n\n## Example: BMI, PM2.5, Asthma\n\nTo demonstrate the various pieces of `ggplot2` we will use a running example from the **Mouse Allergen and Asthma Cohort Study (MAACS)**. Here, the question we are interested in is\n\n> \"Are overweight individuals, as measured by body mass index (BMI), more susceptible than normal weight individuals to the harmful effects of PM2.5 on asthma symptoms?\"\n\nThere is a suggestion that overweight individuals may be more susceptible to the negative effects of inhaling PM2.5.\n\nThis would suggest that increases in PM2.5 exposure in the home of an overweight child would be more deleterious to his/her asthma symptoms than they would be in the home of a normal weight child.\n\nWe want to see if we can see that difference in the data from MAACS.\n\n::: callout-tip\n### Note\n\nBecause the individual-level data for this study are protected by various U.S. privacy laws, we cannot make those data available.\n\nFor the purposes of this lesson, we have **simulated data** that share many of the same features of the original data, but do not contain any of the actual measurements or values contained in the original dataset.\n:::\n\n::: callout-tip\n### Example\n\nWe can look at the data quickly by reading it in as a tibble with `read_csv()` in the `tidyverse` package.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(\"tidyverse\")\nlibrary(\"here\")\nmaacs <- read_csv(here(\"data\", \"bmi_pm25_no2_sim.csv\"),\n    col_types = \"nnci\"\n)\nmaacs\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 517 × 4\n   logpm25 logno2_new bmicat        NocturnalSympt\n     <dbl>      <dbl> <chr>                  <int>\n 1   1.25       1.18  normal weight              1\n 2   1.12       1.55  overweight                 0\n 3   1.93       1.43  normal weight              0\n 4   1.37       1.77  overweight                 2\n 5   0.775      0.765 normal weight              0\n 6   1.49       1.11  normal weight              0\n 7   2.16       1.43  normal weight              0\n 8   1.65       1.40  normal weight              0\n 9   1.55       1.81  normal weight              0\n10   2.04       1.35  overweight                 3\n# ℹ 507 more rows\n```\n:::\n:::\n\n:::\n\nThe outcome we will look at here (`NocturnalSymp`) is the number of days in the past 2 weeks where the child experienced asthma symptoms (e.g. coughing, wheezing) while sleeping.\n\nThe other key variables are:\n\n-   `logpm25`: average level of PM2.5 over the course of 7 days (micrograms per cubic meter) on the log scale\n\n-   `logno2_new`: exhaled nitric oxide on the log scale\n\n-   `bmicat`: categorical variable with BMI status\n\n# Building up in layers\n\nFirst, we can **create a `ggplot` object** that stores the dataset and the basic aesthetics for mapping the x- and y-coordinates for the plot.\n\n::: callout-tip\n### Example\n\nHere, we will eventually be plotting the log of PM2.5 and `NocturnalSymp` variable.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng <- ggplot(maacs, aes(\n    x = logpm25,\n    y = NocturnalSympt\n))\nsummary(g)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\ndata: logpm25, logno2_new, bmicat, NocturnalSympt [517x4]\nmapping:  x = ~logpm25, y = ~NocturnalSympt\nfaceting: <ggproto object: Class FacetNull, Facet, gg>\n    compute_layout: function\n    draw_back: function\n    draw_front: function\n    draw_labels: function\n    draw_panels: function\n    finish_data: function\n    init_scales: function\n    map_data: function\n    params: list\n    setup_data: function\n    setup_params: function\n    shrink: TRUE\n    train_scales: function\n    vars: function\n    super:  <ggproto object: Class FacetNull, Facet, gg>\n```\n:::\n\n```{.r .cell-code}\nclass(g)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"gg\"     \"ggplot\"\n```\n:::\n:::\n\n:::\n\nYou can see above that the object `g` contains the dataset `maacs` and the mappings.\n\nNow, normally if you were to `print()` a `ggplot` object a plot would appear on the plot device, however, our object `g` actually does not contain enough information to make a plot yet.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng <- maacs %>%\n    ggplot(aes(logpm25, NocturnalSympt))\nprint(g)\n```\n\n::: {.cell-output-display}\n![Nothing to see here!](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n## First plot with point layer\n\nTo make a scatter plot, we need add at least one **geom**, such as points.\n\nHere, we add the `geom_point()` function to create a traditional scatter plot.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng <- maacs %>%\n    ggplot(aes(logpm25, NocturnalSympt))\ng + geom_point()\n```\n\n::: {.cell-output-display}\n![Scatterplot of PM2.5 and days with nocturnal symptoms](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\nHow does ggplot know what points to plot? In this case, it can grab them from the data frame `maacs` that served as the input into the `ggplot()` function.\n\n## Adding more layers\n\n### smooth\n\nBecause the data appear rather noisy, it might be better if we added a smoother on top of the points to see if there is a trend in the data with PM2.5.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng +\n    geom_point() +\n    geom_smooth()\n```\n\n::: {.cell-output-display}\n![Scatterplot with smoother](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\nThe default smoother is a loess smoother, which is flexible and nonparametric but might be too flexible for our purposes. Perhaps we'd prefer a simple linear regression line to highlight any first order trends. We can do this by specifying `method = \"lm\"` to `geom_smooth()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng +\n    geom_point() +\n    geom_smooth(method = \"lm\")\n```\n\n::: {.cell-output-display}\n![Scatterplot with linear regression line](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nHere, we can see there appears to be a slight increasing trend, suggesting that higher levels of PM2.5 are associated with increased days with nocturnal symptoms.\n\n::: callout-note\n### Question\n\nLet's use the `ggplot()` function with our `palmerpenguins` dataset example and make a scatter plot with `flipper_length_mm` on the x-axis, `bill_length_mm` on the y-axis, colored by `species`, and a smoother by adding a linear regression.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# try it yourself\n\nlibrary(\"palmerpenguins\")\npenguins\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 344 × 8\n   species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   <fct>   <fct>              <dbl>         <dbl>             <int>       <int>\n 1 Adelie  Torgersen           39.1          18.7               181        3750\n 2 Adelie  Torgersen           39.5          17.4               186        3800\n 3 Adelie  Torgersen           40.3          18                 195        3250\n 4 Adelie  Torgersen           NA            NA                  NA          NA\n 5 Adelie  Torgersen           36.7          19.3               193        3450\n 6 Adelie  Torgersen           39.3          20.6               190        3650\n 7 Adelie  Torgersen           38.9          17.8               181        3625\n 8 Adelie  Torgersen           39.2          19.6               195        4675\n 9 Adelie  Torgersen           34.1          18.1               193        3475\n10 Adelie  Torgersen           42            20.2               190        4250\n# ℹ 334 more rows\n# ℹ 2 more variables: sex <fct>, year <int>\n```\n:::\n:::\n\n:::\n\n### facets\n\nBecause our primary question involves comparing overweight individuals to normal weight individuals, we can **stratify the scatter plot** of PM2.5 and nocturnal symptoms by the BMI category (`bmicat`) variable, which indicates whether an individual is overweight or not.\n\nTo visualize this we can **add a `facet_grid()`**, which takes a formula argument.\n\n::: callout-tip\n### Example\n\nWe want one row and two columns, one column for each weight category. So we specify `bmicat` on the right hand side of the forumla passed to `facet_grid()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng +\n    geom_point() +\n    geom_smooth(method = \"lm\") +\n    facet_grid(. ~ bmicat)\n```\n\n::: {.cell-output-display}\n![Scatterplot of PM2.5 and nocturnal symptoms by BMI category](index_files/figure-html/unnamed-chunk-8-1.png){width=864}\n:::\n:::\n\n:::\n\nNow it seems clear that the relationship between PM2.5 and nocturnal symptoms is relatively flat among normal weight individuals, while the relationship is increasing among overweight individuals.\n\nThis plot suggests that overweight individuals may be more susceptible to the effects of PM2.5.\n\n# Modifying geom properties\n\nYou can **modify properties of geoms** by specifying options to their respective `geom_*()` functions.\n\n### map aesthetics to constants\n\n::: callout-tip\n### Example\n\nFor example, here we modify the points in the scatterplot to make the color \"steelblue\", the size larger, and the alpha transparency greater.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng + geom_point(color = \"steelblue\", size = 4, alpha = 1 / 2)\n```\n\n::: {.cell-output-display}\n![Modifying point color with a constant](index_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n:::\n\n### map aesthetics to variables\n\nIn addition to setting specific geom attributes to constant values, we can **map aesthetics to variables** in our dataset.\n\nFor example, we can map the aesthetic `color` to the variable `bmicat`, so the points will be colored according to the levels of `bmicat`.\n\nWe use the `aes()` function to indicate this difference from the plot above.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng + geom_point(aes(color = bmicat), size = 4, alpha = 1 / 2)\n```\n\n::: {.cell-output-display}\n![Mapping color to a variable](index_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n## Customizing the smooth\n\nWe can also **customize aspects of the geoms**.\n\nFor example, we can customize the smoother that we overlay on the points with `geom_smooth()`.\n\nHere we change the line type and increase the size from the default. We also remove the shaded standard error from the line.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng +\n    geom_point(aes(color = bmicat),\n        size = 2,\n        alpha = 1 / 2\n    ) +\n    geom_smooth(\n        linewidth = 4,\n        linetype = 3,\n        method = \"lm\",\n        se = FALSE\n    )\n```\n\n::: {.cell-output-display}\n![Customizing a smoother](index_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n# Other important stuff\n\n## Changing the theme\n\nThe **default theme for `ggplot2` uses the gray background** with white grid lines.\n\nIf you don't find this suitable, you can use the black and white theme by using the `theme_bw()` function.\n\nThe `theme_bw()` function also allows you to set the typeface for the plot, in case you don't want the default Helvetica. Here we change the typeface to Times.\n\n::: callout-tip\n### Note\n\nFor things that only make sense globally, use `theme()`, i.e. `theme(legend.position = \"none\")`. Two standard appearance themes are included\n\n-   `theme_gray()`: The default theme (gray background)\n-   `theme_bw()`: More stark/plain\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng +\n    geom_point(aes(color = bmicat)) +\n    theme_bw(base_family = \"Times\")\n```\n\n::: {.cell-output-display}\n![Modifying the theme for a plot](index_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n::: callout-note\n### Question\n\nLet's take our `palmerpenguins` scatterplot from above and change out the theme to use `theme_dark()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# try it yourself\n\nlibrary(\"palmerpenguins\")\npenguins\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 344 × 8\n   species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   <fct>   <fct>              <dbl>         <dbl>             <int>       <int>\n 1 Adelie  Torgersen           39.1          18.7               181        3750\n 2 Adelie  Torgersen           39.5          17.4               186        3800\n 3 Adelie  Torgersen           40.3          18                 195        3250\n 4 Adelie  Torgersen           NA            NA                  NA          NA\n 5 Adelie  Torgersen           36.7          19.3               193        3450\n 6 Adelie  Torgersen           39.3          20.6               190        3650\n 7 Adelie  Torgersen           38.9          17.8               181        3625\n 8 Adelie  Torgersen           39.2          19.6               195        4675\n 9 Adelie  Torgersen           34.1          18.1               193        3475\n10 Adelie  Torgersen           42            20.2               190        4250\n# ℹ 334 more rows\n# ℹ 2 more variables: sex <fct>, year <int>\n```\n:::\n:::\n\n:::\n\n## Modifying labels\n\n::: callout-tip\n### Note\n\nThere are a variety of **annotations** you can add to a plot, including **different kinds of labels**.\n\n-   `xlab()` for x-axis labels\n-   `ylab()` for y-axis labels\n-   `ggtitle()` for specifying plot titles\n\n`labs()` function is generic and can be used to modify multiple types of labels at once\n:::\n\nHere is an example of modifying the title and the `x` and `y` labels to make the plot a bit more informative.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng +\n    geom_point(aes(color = bmicat)) +\n    labs(title = \"MAACS Cohort\") +\n    labs(\n        x = expression(\"log \" * PM[2.5]),\n        y = \"Nocturnal Symptoms\"\n    )\n```\n\n::: {.cell-output-display}\n![Modifying plot labels](index_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n## A quick aside about axis limits\n\nOne quick **quirk about `ggplot2`** that caught me up when I first started using the package can be displayed in the following example.\n\nIf you make a lot of time series plots, you often **want to restrict the range of the y-axis** while still plotting all the data.\n\nIn the base graphics system you can do that as follows.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntestdat <- data.frame(\n    x = 1:100,\n    y = rnorm(100)\n)\ntestdat[50, 2] <- 100 ## Outlier!\nplot(testdat$x,\n    testdat$y,\n    type = \"l\",\n    ylim = c(-3, 3)\n)\n```\n\n::: {.cell-output-display}\n![Time series plot with base graphics](index_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\nHere, we have restricted the y-axis range to be between -3 and 3, even though there is a clear outlier in the data.\n\n::: callout-tip\n### Example\n\nWith `ggplot2` the default settings will give you this.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng <- ggplot(testdat, aes(x = x, y = y))\ng + geom_line()\n```\n\n::: {.cell-output-display}\n![Time series plot with default settings](index_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\nOne might think that modifying the `ylim()` attribute would give you the same thing as the base plot, but it doesn't (?????)\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng +\n    geom_line() +\n    ylim(-3, 3)\n```\n\n::: {.cell-output-display}\n![Time series plot with modified ylim](index_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n:::\n\nEffectively, what this does is subset the data so that only observations between -3 and 3 are included, then plot the data.\n\nTo plot the data without subsetting it first and still get the restricted range, you have to do the following.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng +\n    geom_line() +\n    coord_cartesian(ylim = c(-3, 3))\n```\n\n::: {.cell-output-display}\n![Time series plot with restricted y-axis range](index_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\nAnd now you know!\n\n# Do you like BBC's plots? Make your own!\n\nWell, thanks to <https://bbc.github.io/rcookbook/> and the `bbplot` package you now can make plots worthy of the <https://www.bbc.com/news>.\n\nFirst, we need to install the `bbplot` package which is only available from GitHub. To do so, we'll use `remotes::install_github()` instead of the typical function `install.packages()`. The latter only works for R packages distributed by CRAN. If you don't have `remotes` installed, you'll have to install it from CRAN with `install.packages(\"remotes\")`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## Install bbplot\nremotes::install_github(\"bbc/bbplot\")\n```\n:::\n\n\nNext, let's try the `bbplot::bbc_style()` function on a plot we made before.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## Basic ggplot2 object with our data\ng <- maacs %>%\n    ggplot(aes(logpm25, NocturnalSympt))\n\n## A plot we made before, but this time without the SE lines\ng +\n    geom_point() +\n    geom_smooth(method = \"lm\", se = FALSE) +\n    facet_grid(. ~ bmicat)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-20-1.png){width=1248}\n:::\n\n```{.r .cell-code}\n## Now let's add bbplot::bbc_style()\ng +\n    geom_point() +\n    geom_smooth(method = \"lm\", se = FALSE) +\n    facet_grid(. ~ bmicat) +\n    bbplot::bbc_style()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-20-2.png){width=1248}\n:::\n:::\n\n\nNext, we can use the blue color that the BBC frequently uses and further improve our plot by adding a title and subtitle.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng +\n    geom_point() +\n    geom_smooth(colour = \"#1380A1\", method = \"lm\", se = FALSE) +\n    facet_grid(. ~ bmicat) +\n    bbplot::bbc_style() +\n    labs(\n        title = \"Child asthma's link to air quality worsens in overweight children\",\n        subtitle = \"Number of days with symptoms vs PM2.5 by weight group\"\n    )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-21-1.png){width=1248}\n:::\n:::\n\n\nBut maybe that was too confusing for our readers as we are showing a lot of information. We can drop the points and only keep the regression lines. Here we'll need to map the `bmicat` variable to the `color` (or `colour`) aesthetic, then manually change the colors we want to match the typical yellow and blue colors the BBC uses. See <https://htmlcolorcodes.com/>, <https://www.color-hex.com/>, or other similar websites for visualizing HTML Hex color codes. We can also increase the line width.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng +\n    geom_smooth(aes(colour = bmicat), method = \"lm\", se = FALSE, linewidth = 2) +\n    scale_colour_manual(values = c(\"#FAAB18\", \"#1380A1\")) +\n    bbplot::bbc_style() +\n    labs(\n        title = \"Child asthma's link to air quality worsens in overweight children\",\n        subtitle = \"Number of days with symptoms vs PM2.5 by weight group\"\n    )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-22-1.png){width=1248}\n:::\n:::\n\n\nVoilà! Hopefully our editor likes the plot we made!\n\nP.S. Follow [Christine Zhang](https://twitter.com/christinezhang) on Twitter / X for more [#dataviz](https://twitter.com/hashtag/dataviz?src=hashtag_click) and data journalism.\n\n# What about Barbenheimer?\n\nWell, there's <https://github.com/MatthewBJane/theme_park> now. Here are some examples with it:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## Install ThemePark from GitHub\nremotes::install_github(\"MatthewBJane/theme_park\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n## Barbie-inspired theme\ng +\n    geom_smooth(aes(colour = bmicat), method = \"lm\", se = FALSE, linewidth = 2) +\n    scale_colour_manual(values = c(\"#FAAB18\", \"#1380A1\")) +\n    ThemePark::theme_barbie() +\n    labs(\n        title = \"Child asthma's link to air quality worsens in overweight children\",\n        subtitle = \"Number of days with symptoms vs PM2.5 by weight group\"\n    )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-24-1.png){width=1248}\n:::\n\n```{.r .cell-code}\n## Oppenheimer-inspired theme\ng +\n    geom_smooth(aes(colour = bmicat), method = \"lm\", se = FALSE, linewidth = 2) +\n    scale_colour_manual(values = c(\"#FAAB18\", \"#1380A1\")) +\n    ThemePark::theme_oppenheimer() +\n    labs(\n        title = \"Child asthma's link to air quality worsens in overweight children\",\n        subtitle = \"Number of days with symptoms vs PM2.5 by weight group\"\n    )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-24-2.png){width=1248}\n:::\n:::\n\n\nNowadays you can find many `ggplot2` themes online. Just search your favorite movie / keyword + `ggplot2` on Google Search or your favorite browser search tool.\n\nNote that one great package with many themes is the `ggthemes` package showcased at <https://yutannihilation.github.io/allYourFigureAreBelongToUs/ggthemes/>.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## Install ggthemes from CRAN\ninstall.packages(\"ggthemes\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n## Your favorite statistics class theme ;)\n## I bet that you could fool a few people into thinking\n## that you are not using R ^_^'\ng +\n    geom_smooth(aes(colour = bmicat), method = \"lm\", se = FALSE, linewidth = 2) +\n    scale_colour_manual(values = c(\"#FAAB18\", \"#1380A1\")) +\n    ggthemes::theme_stata() +\n    labs(\n        title = \"Child asthma's link to air quality worsens in overweight children\",\n        subtitle = \"Number of days with symptoms vs PM2.5 by weight group\"\n    )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-26-1.png){width=672}\n:::\n:::\n\n\n# Can we... make them interactive?\n\nYes we can! Well, not always, but you can always try. Simply save your plot as an object, then feed that object into `plotly::ggplotly()`. `plotly` is available from CRAN as is documented at <https://plotly.com/r/>. That's how I made a lot of the interactive plots in `spatialLIBD` that you can see at <http://spatial.libd.org/spatialLIBD/>.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## Save our plot into an object\ng_complete <- g +\n    geom_point(aes(colour = bmicat)) +\n    geom_smooth(aes(colour = bmicat), method = \"lm\", se = FALSE, linewidth = 2) +\n    scale_colour_manual(values = c(\"#FAAB18\", \"#1380A1\"))\n\n## Make it interactive with plotly::ggplotly()\nplotly::ggplotly((g_complete))\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"plotly html-widget html-fill-item-overflow-hidden html-fill-item\" id=\"htmlwidget-8f58d7157221393a46a9\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-8f58d7157221393a46a9\">{\"x\":{\"data\":[{\"x\":[1.24769972983375,1.9300429141086501,0.77533665789135287,1.4872784966813399,2.1615574803822102,1.64563052905462,1.5544082768624199,1.5212960966275397,1.2184296826109096,1.4258449655509697,1.2813694761807999,1.5757109645731202,0.978460013908523,1.1572663592263299,1.2835128594562701,1.2481588669082504,1.1923375217813605,1.0854663325692397,1.0677576906901198,1.41006867381185,1.31517082369709,1.5120274953428199,1.6069050323177401,1.0034232600102897,1.7093620385653898,1.4788766558165398,1.2819253667276898,1.0955648833337999,1.11195117304135,1.3073664660376199,1.6048175090644601,1.1228496375704398,1.2734803499307901,1.5059162857443695,1.33168941058151,0.80146764315803798,1.37050659973399,1.32347640648253,1.3387082332718201,1.8946931189929099,1.42634876663906,1.2802043950340496,1.50508135482854,1.1597242337064397,1.4396209579354997,1.1001206786319,1.7879738495447999,1.8512334384889999,1.5218488927120297,1.3510496087245099,1.1253211179662999,1.0688286919593397,1.5589160505983199,1.3796070172298998,1.6407773208287104,1.6850508625624101,1.74002798448719,1.43118710003204,1.41371722189649,1.37942959454126,1.4227800473879797,0.92014507569704607,2.2313562442829404,1.5329518532139998,1.1402635345380603,1.28686807102857,1.2720782353053299,1.39909002706305,1.3164325283701102,1.0193587855842499,1.4981127795386902,1.3250645375627599,0.89138485956219005,1.5964601653980501,1.5029016517843796,1.2154183124353697,1.5086897174322598,2.0083540739779906,1.2560480212637104,0.735618078067099,0.91912338587168985,1.5022394970696997,1.1961482428497201,1.53430542906469,1.50636626594852,1.45894685326675,1.8052294006527598,1.27733746540723,1.4894402573695795,0.61614296041301997,1.4320670910086499,1.6681824659644202,1.2073320780425398,1.1228513126879198,1.2758932162498795,1.5603858940075601,1.3210362337774397,0.82599691276203402,1.5455515379470399,0.98633188270836092,0.55021972067832703,1.4778407493653798,2.0877535644571603,1.1370212282969998,1.6595606053725898,1.2860933400738599,1.2638003167491896,1.46201418632887,1.3137212722145495,1.8054086653834598,1.31513093765555,1.4820061443474799,1.3227022705553499,1.1807240942364099,1.2567357714482001,1.3312540140165301,1.1976570966614302,1.4657506916961098,1.3799115212781001,1.6236350807779598,1.4553192383725098,1.47069228367623,1.2735469365365901,0.95895284565835204,0.65254745886898002,1.0545696447523698,1.3538907640480999,1.1766738624334001,1.7647675975986199,1.0866503177436799,1.6585888929137103,1.2510605498185101,1.2673530876895598,1.7591447409722398,1.2350141395637801,1.0894070872655399,1.0975469945152101,1.0875717272385999,1.8832260305120399,1.4439618327410098,1.1119695534088299,1.8244595861585402,1.2880892518720999,1.4347016294553498,0.70180598381101689,1.8109026398441499,1.2100757983840098,1.6795915593859898,1.1919547187480999,1.8715484015860402,0.81868922552098911,1.0964846438791798,0.99486698257927497,1.6886132066718202,1.7328695315844298,1.4989430398993,1.1744428553771,1.0746564291339802,1.6622850464563204,1.4769441950941096,1.3078589551215301,1.64055678543058,1.2547742713776098,1.5544289896710701,0.90314333883487008,1.3044208799547801,1.8208874332456402,1.0087626996972299,1.32408699517367,0.870963616981967,1.4790530871747498,0.53232239831740991,1.4307077677653099,1.4392774432448898,1.2574347587798995,1.2157527344943599,1.5684348614761501,1.28837810657945,0.895651268352324,0.87949175913427113,1.5032380530074096,1.1660127161326201,0.91928859667338714,1.7347131288966902,0.88702322988175586,1.5173644715818899,1.5819412107096595,1.2748692991862198,1.2353187897042699,1.33641532576942,0.59329373659780205,1.4152583780439498,1.5406226367707301,1.1379869549405501,1.2106615156323497,1.53290967455303,1.7487021142990899,1.4607717072606998,1.11378318574474,1.6438577028846899,1.0936953353493697,1.53040824159635,1.1578533003621798,1.9244994871607297,1.0672989942634199,1.0987497850316399,1.54736592662517,1.30361395072085,1.3151396927144594,1.4103394022460298,1.4829628636567203,1.6958406235024299,1.1806413058054399,1.0400729146739802,1.4088014673322198,1.8019910757876196,1.1960128562368904,1.29915151218185,1.0310844446059699,1.7231666784093396,1.75725498436476,1.2785549863513201,1.6625535051979501,1.4642893527893797,1.3601677853971699,1.2048328222276099,1.6241578549567606,0.97176974653402903,1.37669277316229,1.1069510600530901,1.18835608834465,0.88726610442597786,1.0612765531731598,2.2183491244418794,1.2744098825155099,1.73680906979343,1.3413221592972699,1.9321174001502601,1.42858398418296,0.57674764299658221,1.1550279556607201,1.1151818705032002,1.7247883236452302,1.5896307972012798,1.5322491887106899,1.4728056831435099,1.5441876541537802,1.14715355786818,1.1008013366401699,1.06291519185961,1.3967781610366503,1.4779643436208496,1.6263776442572202,0.98468895979571291,1.0063352622400998,1.9904059447752902,0.9515144303764741,1.49402010642788,1.04980702630705,1.5857713422109896,1.8915942172867597,1.3376971417005401,1.0331291960192697,1.29004945214622,1.2214014897708199,1.3179707842556299,1.0652978139876899,1.3447444732917202,1.2505515243526901,1.5749820656998601,1.3646155237909203,1.4236710039448897,1.5369442080835098,1.79515148496044,1.2865754731350201,0.75317336376600685,1.1300279157336901,1.5155336374980097,1.6895877382485303,1.3500584709050103,1.3199652185018698,1.5270325130340698,1.3967744274621798,1.2733002965376197,1.06325303526586,1.6111111635386102,1.3118632945325897,1.17658949166737,0.6695600333812749,1.3722630480746099,1.1755086352137001,1.2338182465264897,1.1677198052851898],\"y\":[1,0,0,0,0,0,0,1,2,0,0,0,2,1,1,0,0,0,2,4,0,0,0,1,2,1,1,2,1,0,2,1,2,1,0,1,0,0,0,1,0,0,4,1,0,0,2,0,0,0,0,2,3,1,3,1,1,0,1,1,0,0,2,0,1,1,2,1,3,5,0,1,2,0,1,1,0,0,0,3,2,2,2,3,1,2,2,0,1,0,1,4,0,0,1,3,0,1,2,0,0,1,0,2,0,2,0,2,0,2,0,1,1,2,0,1,1,4,2,1,0,3,2,0,2,1,1,1,0,0,1,1,1,1,1,3,3,3,3,1,1,1,1,0,0,2,4,2,1,1,2,2,2,0,2,2,1,0,3,0,1,1,1,0,2,1,0,2,2,1,2,0,2,1,0,1,3,3,1,2,2,3,0,1,2,0,3,0,1,0,1,3,2,1,1,1,2,0,0,0,2,3,2,1,2,0,1,2,1,0,0,2,1,1,1,1,3,0,0,1,2,0,2,1,0,2,3,0,2,1,2,0,1,0,1,0,2,1,1,1,1,1,0,0,1,3,2,3,1,0,1,1,2,1,0,2,1,1,1,0,1,0,2,0,1,0,2,2,1,0,0,1,0,1,1,3,2,1,0,2,0,0,1,3,1,2,2,2,2,0,0,1,2],\"text\":[\"logpm25: 1.2476997<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.9300429<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 0.7753367<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.4872785<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 2.1615575<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.6456305<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.5544083<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.5212961<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.2184297<br />NocturnalSympt: 2<br />bmicat: normal weight\",\"logpm25: 1.4258450<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.2813695<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.5757110<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 0.9784600<br />NocturnalSympt: 2<br />bmicat: normal weight\",\"logpm25: 1.1572664<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.2835129<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.2481589<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.1923375<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.0854663<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.0677577<br />NocturnalSympt: 2<br />bmicat: normal weight\",\"logpm25: 1.4100687<br />NocturnalSympt: 4<br />bmicat: normal weight\",\"logpm25: 1.3151708<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.5120275<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.6069050<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.0034233<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.7093620<br />NocturnalSympt: 2<br />bmicat: normal weight\",\"logpm25: 1.4788767<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.2819254<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.0955649<br />NocturnalSympt: 2<br />bmicat: normal weight\",\"logpm25: 1.1119512<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.3073665<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.6048175<br />NocturnalSympt: 2<br />bmicat: normal weight\",\"logpm25: 1.1228496<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.2734803<br />NocturnalSympt: 2<br />bmicat: normal weight\",\"logpm25: 1.5059163<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.3316894<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 0.8014676<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.3705066<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.3234764<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.3387082<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.8946931<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.4263488<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.2802044<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.5050814<br />NocturnalSympt: 4<br />bmicat: normal weight\",\"logpm25: 1.1597242<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.4396210<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.1001207<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.7879738<br />NocturnalSympt: 2<br />bmicat: normal weight\",\"logpm25: 1.8512334<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.5218489<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.3510496<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.1253211<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.0688287<br />NocturnalSympt: 2<br />bmicat: normal weight\",\"logpm25: 1.5589161<br />NocturnalSympt: 3<br />bmicat: normal weight\",\"logpm25: 1.3796070<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.6407773<br />NocturnalSympt: 3<br />bmicat: normal weight\",\"logpm25: 1.6850509<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.7400280<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.4311871<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.4137172<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.3794296<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.4227800<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 0.9201451<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 2.2313562<br />NocturnalSympt: 2<br />bmicat: normal weight\",\"logpm25: 1.5329519<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.1402635<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.2868681<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.2720782<br />NocturnalSympt: 2<br />bmicat: normal weight\",\"logpm25: 1.3990900<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.3164325<br />NocturnalSympt: 3<br />bmicat: normal weight\",\"logpm25: 1.0193588<br />NocturnalSympt: 5<br />bmicat: normal weight\",\"logpm25: 1.4981128<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.3250645<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 0.8913849<br />NocturnalSympt: 2<br />bmicat: normal weight\",\"logpm25: 1.5964602<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.5029017<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.2154183<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.5086897<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 2.0083541<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.2560480<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 0.7356181<br />NocturnalSympt: 3<br />bmicat: normal weight\",\"logpm25: 0.9191234<br />NocturnalSympt: 2<br />bmicat: normal weight\",\"logpm25: 1.5022395<br />NocturnalSympt: 2<br />bmicat: normal weight\",\"logpm25: 1.1961482<br />NocturnalSympt: 2<br />bmicat: normal weight\",\"logpm25: 1.5343054<br />NocturnalSympt: 3<br />bmicat: normal weight\",\"logpm25: 1.5063663<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.4589469<br />NocturnalSympt: 2<br />bmicat: normal weight\",\"logpm25: 1.8052294<br />NocturnalSympt: 2<br />bmicat: normal weight\",\"logpm25: 1.2773375<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.4894403<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 0.6161430<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.4320671<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.6681825<br />NocturnalSympt: 4<br />bmicat: normal weight\",\"logpm25: 1.2073321<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.1228513<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.2758932<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.5603859<br />NocturnalSympt: 3<br />bmicat: normal weight\",\"logpm25: 1.3210362<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 0.8259969<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.5455515<br />NocturnalSympt: 2<br />bmicat: normal weight\",\"logpm25: 0.9863319<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 0.5502197<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.4778407<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 2.0877536<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.1370212<br />NocturnalSympt: 2<br />bmicat: normal weight\",\"logpm25: 1.6595606<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.2860933<br />NocturnalSympt: 2<br />bmicat: normal weight\",\"logpm25: 1.2638003<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.4620142<br />NocturnalSympt: 2<br />bmicat: normal weight\",\"logpm25: 1.3137213<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.8054087<br />NocturnalSympt: 2<br />bmicat: normal weight\",\"logpm25: 1.3151309<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.4820061<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.3227023<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.1807241<br />NocturnalSympt: 2<br />bmicat: normal weight\",\"logpm25: 1.2567358<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.3312540<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.1976571<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.4657507<br />NocturnalSympt: 4<br />bmicat: normal weight\",\"logpm25: 1.3799115<br />NocturnalSympt: 2<br />bmicat: normal weight\",\"logpm25: 1.6236351<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.4553192<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.4706923<br />NocturnalSympt: 3<br />bmicat: normal weight\",\"logpm25: 1.2735469<br />NocturnalSympt: 2<br />bmicat: normal weight\",\"logpm25: 0.9589528<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 0.6525475<br />NocturnalSympt: 2<br />bmicat: normal weight\",\"logpm25: 1.0545696<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.3538908<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.1766739<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.7647676<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.0866503<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.6585889<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.2510605<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.2673531<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.7591447<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.2350141<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.0894071<br />NocturnalSympt: 3<br />bmicat: normal weight\",\"logpm25: 1.0975470<br />NocturnalSympt: 3<br />bmicat: normal weight\",\"logpm25: 1.0875717<br />NocturnalSympt: 3<br />bmicat: normal weight\",\"logpm25: 1.8832260<br />NocturnalSympt: 3<br />bmicat: normal weight\",\"logpm25: 1.4439618<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.1119696<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.8244596<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.2880893<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.4347016<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 0.7018060<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.8109026<br />NocturnalSympt: 2<br />bmicat: normal weight\",\"logpm25: 1.2100758<br />NocturnalSympt: 4<br />bmicat: normal weight\",\"logpm25: 1.6795916<br />NocturnalSympt: 2<br />bmicat: normal weight\",\"logpm25: 1.1919547<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.8715484<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 0.8186892<br />NocturnalSympt: 2<br />bmicat: normal weight\",\"logpm25: 1.0964846<br />NocturnalSympt: 2<br />bmicat: normal weight\",\"logpm25: 0.9948670<br />NocturnalSympt: 2<br />bmicat: normal weight\",\"logpm25: 1.6886132<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.7328695<br />NocturnalSympt: 2<br />bmicat: normal weight\",\"logpm25: 1.4989430<br />NocturnalSympt: 2<br />bmicat: normal weight\",\"logpm25: 1.1744429<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.0746564<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.6622850<br />NocturnalSympt: 3<br />bmicat: normal weight\",\"logpm25: 1.4769442<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.3078590<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.6405568<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.2547743<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.5544290<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 0.9031433<br />NocturnalSympt: 2<br />bmicat: normal weight\",\"logpm25: 1.3044209<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.8208874<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.0087627<br />NocturnalSympt: 2<br />bmicat: normal weight\",\"logpm25: 1.3240870<br />NocturnalSympt: 2<br />bmicat: normal weight\",\"logpm25: 0.8709636<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.4790531<br />NocturnalSympt: 2<br />bmicat: normal weight\",\"logpm25: 0.5323224<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.4307078<br />NocturnalSympt: 2<br />bmicat: normal weight\",\"logpm25: 1.4392774<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.2574348<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.2157527<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.5684349<br />NocturnalSympt: 3<br />bmicat: normal weight\",\"logpm25: 1.2883781<br />NocturnalSympt: 3<br />bmicat: normal weight\",\"logpm25: 0.8956513<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 0.8794918<br />NocturnalSympt: 2<br />bmicat: normal weight\",\"logpm25: 1.5032381<br />NocturnalSympt: 2<br />bmicat: normal weight\",\"logpm25: 1.1660127<br />NocturnalSympt: 3<br />bmicat: normal weight\",\"logpm25: 0.9192886<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.7347131<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 0.8870232<br />NocturnalSympt: 2<br />bmicat: normal weight\",\"logpm25: 1.5173645<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.5819412<br />NocturnalSympt: 3<br />bmicat: normal weight\",\"logpm25: 1.2748693<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.2353188<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.3364153<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 0.5932937<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.4152584<br />NocturnalSympt: 3<br />bmicat: normal weight\",\"logpm25: 1.5406226<br />NocturnalSympt: 2<br />bmicat: normal weight\",\"logpm25: 1.1379870<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.2106615<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.5329097<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.7487021<br />NocturnalSympt: 2<br />bmicat: normal weight\",\"logpm25: 1.4607717<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.1137832<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.6438577<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.0936953<br />NocturnalSympt: 2<br />bmicat: normal weight\",\"logpm25: 1.5304082<br />NocturnalSympt: 3<br />bmicat: normal weight\",\"logpm25: 1.1578533<br />NocturnalSympt: 2<br />bmicat: normal weight\",\"logpm25: 1.9244995<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.0672990<br />NocturnalSympt: 2<br />bmicat: normal weight\",\"logpm25: 1.0987498<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.5473659<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.3036140<br />NocturnalSympt: 2<br />bmicat: normal weight\",\"logpm25: 1.3151397<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.4103394<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.4829629<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.6958406<br />NocturnalSympt: 2<br />bmicat: normal weight\",\"logpm25: 1.1806413<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.0400729<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.4088015<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.8019911<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.1960129<br />NocturnalSympt: 3<br />bmicat: normal weight\",\"logpm25: 1.2991515<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.0310844<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.7231667<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.7572550<br />NocturnalSympt: 2<br />bmicat: normal weight\",\"logpm25: 1.2785550<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.6625535<br />NocturnalSympt: 2<br />bmicat: normal weight\",\"logpm25: 1.4642894<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.3601678<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.2048328<br />NocturnalSympt: 2<br />bmicat: normal weight\",\"logpm25: 1.6241579<br />NocturnalSympt: 3<br />bmicat: normal weight\",\"logpm25: 0.9717697<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.3766928<br />NocturnalSympt: 2<br />bmicat: normal weight\",\"logpm25: 1.1069511<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.1883561<br />NocturnalSympt: 2<br />bmicat: normal weight\",\"logpm25: 0.8872661<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.0612766<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 2.2183491<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.2744099<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.7368091<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.3413222<br />NocturnalSympt: 2<br />bmicat: normal weight\",\"logpm25: 1.9321174<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.4285840<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 0.5767476<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.1550280<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.1151819<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.7247883<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.5896308<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.5322492<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.4728057<br />NocturnalSympt: 3<br />bmicat: normal weight\",\"logpm25: 1.5441877<br />NocturnalSympt: 2<br />bmicat: normal weight\",\"logpm25: 1.1471536<br />NocturnalSympt: 3<br />bmicat: normal weight\",\"logpm25: 1.1008013<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.0629152<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.3967782<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.4779643<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.6263776<br />NocturnalSympt: 2<br />bmicat: normal weight\",\"logpm25: 0.9846890<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.0063353<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.9904059<br />NocturnalSympt: 2<br />bmicat: normal weight\",\"logpm25: 0.9515144<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.4940201<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.0498070<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.5857713<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.8915942<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.3376971<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.0331292<br />NocturnalSympt: 2<br />bmicat: normal weight\",\"logpm25: 1.2900495<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.2214015<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.3179708<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.0652978<br />NocturnalSympt: 2<br />bmicat: normal weight\",\"logpm25: 1.3447445<br />NocturnalSympt: 2<br />bmicat: normal weight\",\"logpm25: 1.2505515<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.5749821<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.3646155<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.4236710<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.5369442<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.7951515<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.2865755<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 0.7531734<br />NocturnalSympt: 3<br />bmicat: normal weight\",\"logpm25: 1.1300279<br />NocturnalSympt: 2<br />bmicat: normal weight\",\"logpm25: 1.5155336<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.6895877<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.3500585<br />NocturnalSympt: 2<br />bmicat: normal weight\",\"logpm25: 1.3199652<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.5270325<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.3967744<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.2733003<br />NocturnalSympt: 3<br />bmicat: normal weight\",\"logpm25: 1.0632530<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.6111112<br />NocturnalSympt: 2<br />bmicat: normal weight\",\"logpm25: 1.3118633<br />NocturnalSympt: 2<br />bmicat: normal weight\",\"logpm25: 1.1765895<br />NocturnalSympt: 2<br />bmicat: normal weight\",\"logpm25: 0.6695600<br />NocturnalSympt: 2<br />bmicat: normal weight\",\"logpm25: 1.3722630<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.1755086<br />NocturnalSympt: 0<br />bmicat: normal weight\",\"logpm25: 1.2338182<br />NocturnalSympt: 1<br />bmicat: normal weight\",\"logpm25: 1.1677198<br />NocturnalSympt: 2<br />bmicat: normal weight\"],\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(250,171,24,1)\",\"opacity\":1,\"size\":5.6692913385826778,\"symbol\":\"circle\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(250,171,24,1)\"}},\"hoveron\":\"points\",\"name\":\"normal weight\",\"legendgroup\":\"normal weight\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[1.1216476420847699,1.3679245980129195,2.0394687175935697,0.98663106129559108,1.1664321946653902,1.8333789763546799,1.3829291945241697,1.66473590576946,1.2776313083020896,1.6782113565349599,1.4810310670224396,1.9693723671601797,1.6360455014647504,0.90914532877892595,1.1652299396419901,0.84327276509174787,0.90015657392823589,1.2843724147839102,1.2589889244880603,1.3335226502918798,0.79569406294776091,1.8854047223977899,0.94058707963140697,1.6286451965988402,1.8157762137399998,1.1669334584634099,1.4796317427467998,1.3034202945359896,1.2734989769537401,1.3661669556298599,1.54949891383576,1.2204047952003696,1.28726097639527,1.7580027650369201,1.51932855473605,1.1882929347778004,0.93072365846506211,1.3733768872494296,1.1251803144571899,1.13350795791312,1.6078983606196398,0.79707493473252888,1.2833964917554999,1.4504379484794498,1.34026680429594,0.93672648344121601,1.5123179120794499,1.8566787430182801,1.8441939197727801,1.4937747477641996,1.6179113022173697,0.90939162681837515,1.09590731332623,1.2514336890051296,1.6666614179497499,1.6106855380261702,0.97768119797523489,2.0128629624583296,0.90710663219519716,0.91152647557821498,1.47336817359357,1.4120167575421796,1.0026991782811898,1.4639883876301196,1.6699732517293897,1.7374203449752499,1.5641015213064702,0.97418187092526998,1.1781842681360801,1.3195249394069399,1.58736357036194,1.17780688332825,1.5861481801912602,1.14625874824966,0.96626906514343491,1.4976189425117701,1.32908680396905,0.91823324742430701,1.3821375661261903,0.94606928259487921,1.1612596299546101,1.5181941398080201,1.19169686073756,1.6617180185723599,1.7599272102138697,1.1659914676409298,1.3352057809615601,1.7224305207582502,1.83341390609097,1.5979785453836699,1.7607282706141396,1.5284407279204499,1.4376036260501097,1.1081904702159,1.4838003261669999,1.0452656752280798,0.95655899601778704,1.4158359627806798,1.3006950388772101,1.1416926125013498,0.79121037402984484,1.6638413554730398,1.3514359378557601,1.1872509733437804,1.6321517703322401,1.5765554596660003,1.2568792738968999,1.1353747205609799,1.53597760400076,1.8013895617501301,1.7397993341744395,1.37447390383447,1.0647851978104099,0.86682186647621717,1.0486288157269399,1.3420847347340801,1.90738714987796,1.2013915014488599,1.0894685259579799,1.5052725312511601,1.3570251281221,1.2348611053393197,1.7050615091513499,1.33423828193984,1.28229430195876,1.2940336468204898,1.4482471259568703,1.2916155803584,1.2611029739083002,1.1234372021266799,0.93715098309447509,1.5124959240112503,1.8482208188681599,1.1359536074173398,1.3507364119137901,1.3397412421142296,1.36449661168575,1.35368015233577,1.5151244872834195,0.77534175681111306,0.6801454134297481,1.4522256542627399,0.69623658297478386,1.5439273945594296,1.6145666888006098,1.8567583613115204,1.5566018538833799,1.3430984245205202,1.76888976089752,0.98616953435515098,1.6485175172406501,1.1028807255211901,1.3033426646859201,1.2628628158369299,0.84349685642243111,1.5824475913167704,1.5113493587910298,1.2634844091739599,1.0348040740042099,1.9829824333808401,1.3430977964411899,1.4289891231323599,0.71162317088803595,1.10242690194491,1.2730913892302398,1.3243617092959699,1.3453710362671298,0.87715877085081806,1.32552090144691,1.0814876828192299,0.95913138273990195,0.98927805984097394,1.0842973539162302,1.4122334459654298,1.6307142494417801,1.0324452065326699,0.99720398699566282,1.0270502532049597,1.4563350649764502,1.7031239916336698,0.98154674727268088,0.96830190513288494,1.9482296927234195,1.28625509418044,1.3868499071284099,1.0469469942087801,1.4581863442934599,1.3982638310206601,1.2480344532002199,0.92287100516548215,1.6807155105671501,1.4860430939209799,1.5845899172975899,1.3236490423461098,1.44243917648558,1.41787787038605,1.3570764943625,1.7756163222627099,1.2527247609620697,1.3693956921655097,1.1586073802883201,0.76955776310724378,1.5326843854506498,1.5126112922616897,1.1332570987861001,1.46239210013224,1.3803721160382003,1.1234461653296,1.78004284739031,1.6328959894847002,1.59662570010551,1.6070336388909499,1.4875790349928699,1.3547090527211798,1.2218007909777397,1.7180657339715302,1.8499113483835499,2.0120269428171103,0.59145000262166791,1.3655535330230202,1.3218581317229101,1.4677746781353895,1.4872289135581898,0.94758896495317502],\"y\":[0,2,3,0,2,3,2,1,2,3,2,3,1,2,3,0,3,1,0,2,0,5,1,1,1,3,2,0,1,1,2,2,2,1,1,1,1,2,0,3,3,0,1,1,1,1,2,3,1,3,3,1,1,1,4,3,1,2,3,0,2,0,1,2,1,2,3,1,3,1,6,3,2,3,1,4,2,2,1,1,1,1,2,2,2,4,1,1,2,1,2,3,2,1,1,1,1,4,0,1,2,2,1,1,2,5,2,0,1,2,0,2,2,0,1,2,1,3,1,1,0,1,1,0,3,1,5,0,2,0,1,2,2,0,3,3,0,2,3,0,1,1,0,0,0,3,1,0,2,1,2,2,1,1,1,2,0,2,2,1,4,0,0,0,2,0,3,0,0,1,2,1,1,4,1,0,1,2,2,3,0,1,3,2,1,1,0,1,2,3,1,1,3,1,4,0,1,5,1,3,2,2,2,3,1,3,1,3,1,1,2,4,3,2,1,0,2,2,0,3,3,3,4,1],\"text\":[\"logpm25: 1.1216476<br />NocturnalSympt: 0<br />bmicat: overweight\",\"logpm25: 1.3679246<br />NocturnalSympt: 2<br />bmicat: overweight\",\"logpm25: 2.0394687<br />NocturnalSympt: 3<br />bmicat: overweight\",\"logpm25: 0.9866311<br />NocturnalSympt: 0<br />bmicat: overweight\",\"logpm25: 1.1664322<br />NocturnalSympt: 2<br />bmicat: overweight\",\"logpm25: 1.8333790<br />NocturnalSympt: 3<br />bmicat: overweight\",\"logpm25: 1.3829292<br />NocturnalSympt: 2<br />bmicat: overweight\",\"logpm25: 1.6647359<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 1.2776313<br />NocturnalSympt: 2<br />bmicat: overweight\",\"logpm25: 1.6782114<br />NocturnalSympt: 3<br />bmicat: overweight\",\"logpm25: 1.4810311<br />NocturnalSympt: 2<br />bmicat: overweight\",\"logpm25: 1.9693724<br />NocturnalSympt: 3<br />bmicat: overweight\",\"logpm25: 1.6360455<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 0.9091453<br />NocturnalSympt: 2<br />bmicat: overweight\",\"logpm25: 1.1652299<br />NocturnalSympt: 3<br />bmicat: overweight\",\"logpm25: 0.8432728<br />NocturnalSympt: 0<br />bmicat: overweight\",\"logpm25: 0.9001566<br />NocturnalSympt: 3<br />bmicat: overweight\",\"logpm25: 1.2843724<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 1.2589889<br />NocturnalSympt: 0<br />bmicat: overweight\",\"logpm25: 1.3335227<br />NocturnalSympt: 2<br />bmicat: overweight\",\"logpm25: 0.7956941<br />NocturnalSympt: 0<br />bmicat: overweight\",\"logpm25: 1.8854047<br />NocturnalSympt: 5<br />bmicat: overweight\",\"logpm25: 0.9405871<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 1.6286452<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 1.8157762<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 1.1669335<br />NocturnalSympt: 3<br />bmicat: overweight\",\"logpm25: 1.4796317<br />NocturnalSympt: 2<br />bmicat: overweight\",\"logpm25: 1.3034203<br />NocturnalSympt: 0<br />bmicat: overweight\",\"logpm25: 1.2734990<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 1.3661670<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 1.5494989<br />NocturnalSympt: 2<br />bmicat: overweight\",\"logpm25: 1.2204048<br />NocturnalSympt: 2<br />bmicat: overweight\",\"logpm25: 1.2872610<br />NocturnalSympt: 2<br />bmicat: overweight\",\"logpm25: 1.7580028<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 1.5193286<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 1.1882929<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 0.9307237<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 1.3733769<br />NocturnalSympt: 2<br />bmicat: overweight\",\"logpm25: 1.1251803<br />NocturnalSympt: 0<br />bmicat: overweight\",\"logpm25: 1.1335080<br />NocturnalSympt: 3<br />bmicat: overweight\",\"logpm25: 1.6078984<br />NocturnalSympt: 3<br />bmicat: overweight\",\"logpm25: 0.7970749<br />NocturnalSympt: 0<br />bmicat: overweight\",\"logpm25: 1.2833965<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 1.4504379<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 1.3402668<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 0.9367265<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 1.5123179<br />NocturnalSympt: 2<br />bmicat: overweight\",\"logpm25: 1.8566787<br />NocturnalSympt: 3<br />bmicat: overweight\",\"logpm25: 1.8441939<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 1.4937747<br />NocturnalSympt: 3<br />bmicat: overweight\",\"logpm25: 1.6179113<br />NocturnalSympt: 3<br />bmicat: overweight\",\"logpm25: 0.9093916<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 1.0959073<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 1.2514337<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 1.6666614<br />NocturnalSympt: 4<br />bmicat: overweight\",\"logpm25: 1.6106855<br />NocturnalSympt: 3<br />bmicat: overweight\",\"logpm25: 0.9776812<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 2.0128630<br />NocturnalSympt: 2<br />bmicat: overweight\",\"logpm25: 0.9071066<br />NocturnalSympt: 3<br />bmicat: overweight\",\"logpm25: 0.9115265<br />NocturnalSympt: 0<br />bmicat: overweight\",\"logpm25: 1.4733682<br />NocturnalSympt: 2<br />bmicat: overweight\",\"logpm25: 1.4120168<br />NocturnalSympt: 0<br />bmicat: overweight\",\"logpm25: 1.0026992<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 1.4639884<br />NocturnalSympt: 2<br />bmicat: overweight\",\"logpm25: 1.6699733<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 1.7374203<br />NocturnalSympt: 2<br />bmicat: overweight\",\"logpm25: 1.5641015<br />NocturnalSympt: 3<br />bmicat: overweight\",\"logpm25: 0.9741819<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 1.1781843<br />NocturnalSympt: 3<br />bmicat: overweight\",\"logpm25: 1.3195249<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 1.5873636<br />NocturnalSympt: 6<br />bmicat: overweight\",\"logpm25: 1.1778069<br />NocturnalSympt: 3<br />bmicat: overweight\",\"logpm25: 1.5861482<br />NocturnalSympt: 2<br />bmicat: overweight\",\"logpm25: 1.1462587<br />NocturnalSympt: 3<br />bmicat: overweight\",\"logpm25: 0.9662691<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 1.4976189<br />NocturnalSympt: 4<br />bmicat: overweight\",\"logpm25: 1.3290868<br />NocturnalSympt: 2<br />bmicat: overweight\",\"logpm25: 0.9182332<br />NocturnalSympt: 2<br />bmicat: overweight\",\"logpm25: 1.3821376<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 0.9460693<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 1.1612596<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 1.5181941<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 1.1916969<br />NocturnalSympt: 2<br />bmicat: overweight\",\"logpm25: 1.6617180<br />NocturnalSympt: 2<br />bmicat: overweight\",\"logpm25: 1.7599272<br />NocturnalSympt: 2<br />bmicat: overweight\",\"logpm25: 1.1659915<br />NocturnalSympt: 4<br />bmicat: overweight\",\"logpm25: 1.3352058<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 1.7224305<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 1.8334139<br />NocturnalSympt: 2<br />bmicat: overweight\",\"logpm25: 1.5979785<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 1.7607283<br />NocturnalSympt: 2<br />bmicat: overweight\",\"logpm25: 1.5284407<br />NocturnalSympt: 3<br />bmicat: overweight\",\"logpm25: 1.4376036<br />NocturnalSympt: 2<br />bmicat: overweight\",\"logpm25: 1.1081905<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 1.4838003<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 1.0452657<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 0.9565590<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 1.4158360<br />NocturnalSympt: 4<br />bmicat: overweight\",\"logpm25: 1.3006950<br />NocturnalSympt: 0<br />bmicat: overweight\",\"logpm25: 1.1416926<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 0.7912104<br />NocturnalSympt: 2<br />bmicat: overweight\",\"logpm25: 1.6638414<br />NocturnalSympt: 2<br />bmicat: overweight\",\"logpm25: 1.3514359<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 1.1872510<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 1.6321518<br />NocturnalSympt: 2<br />bmicat: overweight\",\"logpm25: 1.5765555<br />NocturnalSympt: 5<br />bmicat: overweight\",\"logpm25: 1.2568793<br />NocturnalSympt: 2<br />bmicat: overweight\",\"logpm25: 1.1353747<br />NocturnalSympt: 0<br />bmicat: overweight\",\"logpm25: 1.5359776<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 1.8013896<br />NocturnalSympt: 2<br />bmicat: overweight\",\"logpm25: 1.7397993<br />NocturnalSympt: 0<br />bmicat: overweight\",\"logpm25: 1.3744739<br />NocturnalSympt: 2<br />bmicat: overweight\",\"logpm25: 1.0647852<br />NocturnalSympt: 2<br />bmicat: overweight\",\"logpm25: 0.8668219<br />NocturnalSympt: 0<br />bmicat: overweight\",\"logpm25: 1.0486288<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 1.3420847<br />NocturnalSympt: 2<br />bmicat: overweight\",\"logpm25: 1.9073871<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 1.2013915<br />NocturnalSympt: 3<br />bmicat: overweight\",\"logpm25: 1.0894685<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 1.5052725<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 1.3570251<br />NocturnalSympt: 0<br />bmicat: overweight\",\"logpm25: 1.2348611<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 1.7050615<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 1.3342383<br />NocturnalSympt: 0<br />bmicat: overweight\",\"logpm25: 1.2822943<br />NocturnalSympt: 3<br />bmicat: overweight\",\"logpm25: 1.2940336<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 1.4482471<br />NocturnalSympt: 5<br />bmicat: overweight\",\"logpm25: 1.2916156<br />NocturnalSympt: 0<br />bmicat: overweight\",\"logpm25: 1.2611030<br />NocturnalSympt: 2<br />bmicat: overweight\",\"logpm25: 1.1234372<br />NocturnalSympt: 0<br />bmicat: overweight\",\"logpm25: 0.9371510<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 1.5124959<br />NocturnalSympt: 2<br />bmicat: overweight\",\"logpm25: 1.8482208<br />NocturnalSympt: 2<br />bmicat: overweight\",\"logpm25: 1.1359536<br />NocturnalSympt: 0<br />bmicat: overweight\",\"logpm25: 1.3507364<br />NocturnalSympt: 3<br />bmicat: overweight\",\"logpm25: 1.3397412<br />NocturnalSympt: 3<br />bmicat: overweight\",\"logpm25: 1.3644966<br />NocturnalSympt: 0<br />bmicat: overweight\",\"logpm25: 1.3536802<br />NocturnalSympt: 2<br />bmicat: overweight\",\"logpm25: 1.5151245<br />NocturnalSympt: 3<br />bmicat: overweight\",\"logpm25: 0.7753418<br />NocturnalSympt: 0<br />bmicat: overweight\",\"logpm25: 0.6801454<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 1.4522257<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 0.6962366<br />NocturnalSympt: 0<br />bmicat: overweight\",\"logpm25: 1.5439274<br />NocturnalSympt: 0<br />bmicat: overweight\",\"logpm25: 1.6145667<br />NocturnalSympt: 0<br />bmicat: overweight\",\"logpm25: 1.8567584<br />NocturnalSympt: 3<br />bmicat: overweight\",\"logpm25: 1.5566019<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 1.3430984<br />NocturnalSympt: 0<br />bmicat: overweight\",\"logpm25: 1.7688898<br />NocturnalSympt: 2<br />bmicat: overweight\",\"logpm25: 0.9861695<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 1.6485175<br />NocturnalSympt: 2<br />bmicat: overweight\",\"logpm25: 1.1028807<br />NocturnalSympt: 2<br />bmicat: overweight\",\"logpm25: 1.3033427<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 1.2628628<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 0.8434969<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 1.5824476<br />NocturnalSympt: 2<br />bmicat: overweight\",\"logpm25: 1.5113494<br />NocturnalSympt: 0<br />bmicat: overweight\",\"logpm25: 1.2634844<br />NocturnalSympt: 2<br />bmicat: overweight\",\"logpm25: 1.0348041<br />NocturnalSympt: 2<br />bmicat: overweight\",\"logpm25: 1.9829824<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 1.3430978<br />NocturnalSympt: 4<br />bmicat: overweight\",\"logpm25: 1.4289891<br />NocturnalSympt: 0<br />bmicat: overweight\",\"logpm25: 0.7116232<br />NocturnalSympt: 0<br />bmicat: overweight\",\"logpm25: 1.1024269<br />NocturnalSympt: 0<br />bmicat: overweight\",\"logpm25: 1.2730914<br />NocturnalSympt: 2<br />bmicat: overweight\",\"logpm25: 1.3243617<br />NocturnalSympt: 0<br />bmicat: overweight\",\"logpm25: 1.3453710<br />NocturnalSympt: 3<br />bmicat: overweight\",\"logpm25: 0.8771588<br />NocturnalSympt: 0<br />bmicat: overweight\",\"logpm25: 1.3255209<br />NocturnalSympt: 0<br />bmicat: overweight\",\"logpm25: 1.0814877<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 0.9591314<br />NocturnalSympt: 2<br />bmicat: overweight\",\"logpm25: 0.9892781<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 1.0842974<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 1.4122334<br />NocturnalSympt: 4<br />bmicat: overweight\",\"logpm25: 1.6307142<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 1.0324452<br />NocturnalSympt: 0<br />bmicat: overweight\",\"logpm25: 0.9972040<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 1.0270503<br />NocturnalSympt: 2<br />bmicat: overweight\",\"logpm25: 1.4563351<br />NocturnalSympt: 2<br />bmicat: overweight\",\"logpm25: 1.7031240<br />NocturnalSympt: 3<br />bmicat: overweight\",\"logpm25: 0.9815467<br />NocturnalSympt: 0<br />bmicat: overweight\",\"logpm25: 0.9683019<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 1.9482297<br />NocturnalSympt: 3<br />bmicat: overweight\",\"logpm25: 1.2862551<br />NocturnalSympt: 2<br />bmicat: overweight\",\"logpm25: 1.3868499<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 1.0469470<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 1.4581863<br />NocturnalSympt: 0<br />bmicat: overweight\",\"logpm25: 1.3982638<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 1.2480345<br />NocturnalSympt: 2<br />bmicat: overweight\",\"logpm25: 0.9228710<br />NocturnalSympt: 3<br />bmicat: overweight\",\"logpm25: 1.6807155<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 1.4860431<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 1.5845899<br />NocturnalSympt: 3<br />bmicat: overweight\",\"logpm25: 1.3236490<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 1.4424392<br />NocturnalSympt: 4<br />bmicat: overweight\",\"logpm25: 1.4178779<br />NocturnalSympt: 0<br />bmicat: overweight\",\"logpm25: 1.3570765<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 1.7756163<br />NocturnalSympt: 5<br />bmicat: overweight\",\"logpm25: 1.2527248<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 1.3693957<br />NocturnalSympt: 3<br />bmicat: overweight\",\"logpm25: 1.1586074<br />NocturnalSympt: 2<br />bmicat: overweight\",\"logpm25: 0.7695578<br />NocturnalSympt: 2<br />bmicat: overweight\",\"logpm25: 1.5326844<br />NocturnalSympt: 2<br />bmicat: overweight\",\"logpm25: 1.5126113<br />NocturnalSympt: 3<br />bmicat: overweight\",\"logpm25: 1.1332571<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 1.4623921<br />NocturnalSympt: 3<br />bmicat: overweight\",\"logpm25: 1.3803721<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 1.1234462<br />NocturnalSympt: 3<br />bmicat: overweight\",\"logpm25: 1.7800428<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 1.6328960<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 1.5966257<br />NocturnalSympt: 2<br />bmicat: overweight\",\"logpm25: 1.6070336<br />NocturnalSympt: 4<br />bmicat: overweight\",\"logpm25: 1.4875790<br />NocturnalSympt: 3<br />bmicat: overweight\",\"logpm25: 1.3547091<br />NocturnalSympt: 2<br />bmicat: overweight\",\"logpm25: 1.2218008<br />NocturnalSympt: 1<br />bmicat: overweight\",\"logpm25: 1.7180657<br />NocturnalSympt: 0<br />bmicat: overweight\",\"logpm25: 1.8499113<br />NocturnalSympt: 2<br />bmicat: overweight\",\"logpm25: 2.0120269<br />NocturnalSympt: 2<br />bmicat: overweight\",\"logpm25: 0.5914500<br />NocturnalSympt: 0<br />bmicat: overweight\",\"logpm25: 1.3655535<br />NocturnalSympt: 3<br />bmicat: overweight\",\"logpm25: 1.3218581<br />NocturnalSympt: 3<br />bmicat: overweight\",\"logpm25: 1.4677747<br />NocturnalSympt: 3<br />bmicat: overweight\",\"logpm25: 1.4872289<br />NocturnalSympt: 4<br />bmicat: overweight\",\"logpm25: 0.9475890<br />NocturnalSympt: 1<br />bmicat: overweight\"],\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(19,128,161,1)\",\"opacity\":1,\"size\":5.6692913385826778,\"symbol\":\"circle\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(19,128,161,1)\"}},\"hoveron\":\"points\",\"name\":\"overweight\",\"legendgroup\":\"overweight\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[0.53232239831740991,0.55382915586127734,0.57533591340514489,0.59684267094901233,0.61834942849287977,0.63985618603674732,0.66136294358061476,0.6828697011244822,0.70437645866834975,0.72588321621221719,0.74738997375608474,0.76889673129995217,0.79040348884381961,0.81191024638768705,0.8334170039315546,0.85492376147542204,0.87643051901928959,0.89793727656315703,0.91944403410702447,0.9409507916508919,0.96245754919475945,0.98396430673862689,1.0054710642824944,1.0269778218263619,1.0484845793702293,1.069991336914097,1.0914980944579642,1.1130048520018319,1.1345116095456993,1.1560183670895667,1.1775251246334342,1.1990318821773016,1.2205386397211693,1.2420453972650365,1.2635521548089041,1.2850589123527716,1.306565669896639,1.3280724274405067,1.3495791849843739,1.3710859425282416,1.392592700072109,1.4140994576159764,1.4356062151598439,1.4571129727037113,1.478619730247579,1.5001264877914462,1.5216332453353139,1.5431400028791813,1.5646467604230487,1.5861535179669162,1.6076602755107838,1.6291670330546513,1.6506737905985187,1.6721805481423861,1.6936873056862536,1.715194063230121,1.7367008207739887,1.7582075783178561,1.7797143358617236,1.801221093405591,1.8227278509494584,1.8442346084933259,1.8657413660371935,1.887248123581061,1.9087548811249284,1.9302616386687959,1.9517683962126633,1.973275153756531,1.9947819113003984,2.0162886688442656,2.0377954263881333,2.0593021839320009,2.0808089414758681,2.1023156990197358,2.1238224565636035,2.1453292141074707,2.1668359716513379,2.1883427291952056,2.2098494867390732,2.2313562442829404],\"y\":[1.1774535441931637,1.1760996440828426,1.1747457439725215,1.1733918438622004,1.1720379437518793,1.1706840436415582,1.1693301435312371,1.167976243420916,1.1666223433105949,1.1652684432002738,1.1639145430899527,1.1625606429796316,1.1612067428693105,1.1598528427589894,1.158498942648668,1.1571450425383469,1.1557911424280258,1.1544372423177047,1.1530833422073836,1.1517294420970625,1.1503755419867414,1.1490216418764203,1.1476677417660992,1.1463138416557781,1.144959941545457,1.1436060414351359,1.1422521413248148,1.1408982412144937,1.1395443411041726,1.1381904409938512,1.1368365408835301,1.135482640773209,1.1341287406628879,1.1327748405525668,1.1314209404422457,1.1300670403319246,1.1287131402216035,1.1273592401112824,1.1260053400009613,1.1246514398906402,1.1232975397803191,1.121943639669998,1.1205897395596769,1.1192358394493558,1.1178819393390345,1.1165280392287134,1.1151741391183922,1.1138202390080711,1.11246633889775,1.1111124387874289,1.1097585386771078,1.1084046385667867,1.1070507384564656,1.1056968383461445,1.1043429382358234,1.1029890381255023,1.1016351380151812,1.1002812379048601,1.098927337794539,1.0975734376842179,1.0962195375738966,1.0948656374635755,1.0935117373532544,1.0921578372429332,1.0908039371326121,1.089450037022291,1.0880961369119699,1.0867422368016488,1.0853883366913277,1.0840344365810066,1.0826805364706855,1.0813266363603644,1.0799727362500433,1.0786188361397222,1.0772649360294009,1.0759110359190798,1.0745571358087589,1.0732032356984376,1.0718493355881165,1.0704954354777954],\"text\":[\"logpm25: 0.5323224<br />NocturnalSympt: 1.1774535<br />bmicat: normal weight\",\"logpm25: 0.5538292<br />NocturnalSympt: 1.1760996<br />bmicat: normal weight\",\"logpm25: 0.5753359<br />NocturnalSympt: 1.1747457<br />bmicat: normal weight\",\"logpm25: 0.5968427<br />NocturnalSympt: 1.1733918<br />bmicat: normal weight\",\"logpm25: 0.6183494<br />NocturnalSympt: 1.1720379<br />bmicat: normal weight\",\"logpm25: 0.6398562<br />NocturnalSympt: 1.1706840<br />bmicat: normal weight\",\"logpm25: 0.6613629<br />NocturnalSympt: 1.1693301<br />bmicat: normal weight\",\"logpm25: 0.6828697<br />NocturnalSympt: 1.1679762<br />bmicat: normal weight\",\"logpm25: 0.7043765<br />NocturnalSympt: 1.1666223<br />bmicat: normal weight\",\"logpm25: 0.7258832<br />NocturnalSympt: 1.1652684<br />bmicat: normal weight\",\"logpm25: 0.7473900<br />NocturnalSympt: 1.1639145<br />bmicat: normal weight\",\"logpm25: 0.7688967<br />NocturnalSympt: 1.1625606<br />bmicat: normal weight\",\"logpm25: 0.7904035<br />NocturnalSympt: 1.1612067<br />bmicat: normal weight\",\"logpm25: 0.8119102<br />NocturnalSympt: 1.1598528<br />bmicat: normal weight\",\"logpm25: 0.8334170<br />NocturnalSympt: 1.1584989<br />bmicat: normal weight\",\"logpm25: 0.8549238<br />NocturnalSympt: 1.1571450<br />bmicat: normal weight\",\"logpm25: 0.8764305<br />NocturnalSympt: 1.1557911<br />bmicat: normal weight\",\"logpm25: 0.8979373<br />NocturnalSympt: 1.1544372<br />bmicat: normal weight\",\"logpm25: 0.9194440<br />NocturnalSympt: 1.1530833<br />bmicat: normal weight\",\"logpm25: 0.9409508<br />NocturnalSympt: 1.1517294<br />bmicat: normal weight\",\"logpm25: 0.9624575<br />NocturnalSympt: 1.1503755<br />bmicat: normal weight\",\"logpm25: 0.9839643<br />NocturnalSympt: 1.1490216<br />bmicat: normal weight\",\"logpm25: 1.0054711<br />NocturnalSympt: 1.1476677<br />bmicat: normal weight\",\"logpm25: 1.0269778<br />NocturnalSympt: 1.1463138<br />bmicat: normal weight\",\"logpm25: 1.0484846<br />NocturnalSympt: 1.1449599<br />bmicat: normal weight\",\"logpm25: 1.0699913<br />NocturnalSympt: 1.1436060<br />bmicat: normal weight\",\"logpm25: 1.0914981<br />NocturnalSympt: 1.1422521<br />bmicat: normal weight\",\"logpm25: 1.1130049<br />NocturnalSympt: 1.1408982<br />bmicat: normal weight\",\"logpm25: 1.1345116<br />NocturnalSympt: 1.1395443<br />bmicat: normal weight\",\"logpm25: 1.1560184<br />NocturnalSympt: 1.1381904<br />bmicat: normal weight\",\"logpm25: 1.1775251<br />NocturnalSympt: 1.1368365<br />bmicat: normal weight\",\"logpm25: 1.1990319<br />NocturnalSympt: 1.1354826<br />bmicat: normal weight\",\"logpm25: 1.2205386<br />NocturnalSympt: 1.1341287<br />bmicat: normal weight\",\"logpm25: 1.2420454<br />NocturnalSympt: 1.1327748<br />bmicat: normal weight\",\"logpm25: 1.2635522<br />NocturnalSympt: 1.1314209<br />bmicat: normal weight\",\"logpm25: 1.2850589<br />NocturnalSympt: 1.1300670<br />bmicat: normal weight\",\"logpm25: 1.3065657<br />NocturnalSympt: 1.1287131<br />bmicat: normal weight\",\"logpm25: 1.3280724<br />NocturnalSympt: 1.1273592<br />bmicat: normal weight\",\"logpm25: 1.3495792<br />NocturnalSympt: 1.1260053<br />bmicat: normal weight\",\"logpm25: 1.3710859<br />NocturnalSympt: 1.1246514<br />bmicat: normal weight\",\"logpm25: 1.3925927<br />NocturnalSympt: 1.1232975<br />bmicat: normal weight\",\"logpm25: 1.4140995<br />NocturnalSympt: 1.1219436<br />bmicat: normal weight\",\"logpm25: 1.4356062<br />NocturnalSympt: 1.1205897<br />bmicat: normal weight\",\"logpm25: 1.4571130<br />NocturnalSympt: 1.1192358<br />bmicat: normal weight\",\"logpm25: 1.4786197<br />NocturnalSympt: 1.1178819<br />bmicat: normal weight\",\"logpm25: 1.5001265<br />NocturnalSympt: 1.1165280<br />bmicat: normal weight\",\"logpm25: 1.5216332<br />NocturnalSympt: 1.1151741<br />bmicat: normal weight\",\"logpm25: 1.5431400<br />NocturnalSympt: 1.1138202<br />bmicat: normal weight\",\"logpm25: 1.5646468<br />NocturnalSympt: 1.1124663<br />bmicat: normal weight\",\"logpm25: 1.5861535<br />NocturnalSympt: 1.1111124<br />bmicat: normal weight\",\"logpm25: 1.6076603<br />NocturnalSympt: 1.1097585<br />bmicat: normal weight\",\"logpm25: 1.6291670<br />NocturnalSympt: 1.1084046<br />bmicat: normal weight\",\"logpm25: 1.6506738<br />NocturnalSympt: 1.1070507<br />bmicat: normal weight\",\"logpm25: 1.6721805<br />NocturnalSympt: 1.1056968<br />bmicat: normal weight\",\"logpm25: 1.6936873<br />NocturnalSympt: 1.1043429<br />bmicat: normal weight\",\"logpm25: 1.7151941<br />NocturnalSympt: 1.1029890<br />bmicat: normal weight\",\"logpm25: 1.7367008<br />NocturnalSympt: 1.1016351<br />bmicat: normal weight\",\"logpm25: 1.7582076<br />NocturnalSympt: 1.1002812<br />bmicat: normal weight\",\"logpm25: 1.7797143<br />NocturnalSympt: 1.0989273<br />bmicat: normal weight\",\"logpm25: 1.8012211<br />NocturnalSympt: 1.0975734<br />bmicat: normal weight\",\"logpm25: 1.8227279<br />NocturnalSympt: 1.0962195<br />bmicat: normal weight\",\"logpm25: 1.8442346<br />NocturnalSympt: 1.0948656<br />bmicat: normal weight\",\"logpm25: 1.8657414<br />NocturnalSympt: 1.0935117<br />bmicat: normal weight\",\"logpm25: 1.8872481<br />NocturnalSympt: 1.0921578<br />bmicat: normal weight\",\"logpm25: 1.9087549<br />NocturnalSympt: 1.0908039<br />bmicat: normal weight\",\"logpm25: 1.9302616<br />NocturnalSympt: 1.0894500<br />bmicat: normal weight\",\"logpm25: 1.9517684<br />NocturnalSympt: 1.0880961<br />bmicat: normal weight\",\"logpm25: 1.9732752<br />NocturnalSympt: 1.0867422<br />bmicat: normal weight\",\"logpm25: 1.9947819<br />NocturnalSympt: 1.0853883<br />bmicat: normal weight\",\"logpm25: 2.0162887<br />NocturnalSympt: 1.0840344<br />bmicat: normal weight\",\"logpm25: 2.0377954<br />NocturnalSympt: 1.0826805<br />bmicat: normal weight\",\"logpm25: 2.0593022<br />NocturnalSympt: 1.0813266<br />bmicat: normal weight\",\"logpm25: 2.0808089<br />NocturnalSympt: 1.0799727<br />bmicat: normal weight\",\"logpm25: 2.1023157<br />NocturnalSympt: 1.0786188<br />bmicat: normal weight\",\"logpm25: 2.1238225<br />NocturnalSympt: 1.0772649<br />bmicat: normal weight\",\"logpm25: 2.1453292<br />NocturnalSympt: 1.0759110<br />bmicat: normal weight\",\"logpm25: 2.1668360<br />NocturnalSympt: 1.0745571<br />bmicat: normal weight\",\"logpm25: 2.1883427<br />NocturnalSympt: 1.0732032<br />bmicat: normal weight\",\"logpm25: 2.2098495<br />NocturnalSympt: 1.0718493<br />bmicat: normal weight\",\"logpm25: 2.2313562<br />NocturnalSympt: 1.0704954<br />bmicat: normal weight\"],\"type\":\"scatter\",\"mode\":\"lines\",\"name\":\"normal weight\",\"line\":{\"width\":7.559055118110237,\"color\":\"rgba(250,171,24,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"legendgroup\":\"normal weight\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[0.59145000262166791,0.60977935344409706,0.62810870426652621,0.64643805508895535,0.6647674059113845,0.68309675673381365,0.70142610755624279,0.71975545837867183,0.73808480920110098,0.75641416002353012,0.77474351084595927,0.79307286166838842,0.81140221249081756,0.82973156331324671,0.84806091413567586,0.86639026495810501,0.88471961578053415,0.9030489666029633,0.92137831742539245,0.93970766824782159,0.95803701907025074,0.97636636989267989,0.99469572071510903,1.0130250715375382,1.0313544223599673,1.0496837731823965,1.0680131240048256,1.0863424748272548,1.1046718256496839,1.1230011764721128,1.1413305272945422,1.1596598781169711,1.1779892289394005,1.1963185797618294,1.2146479305842588,1.2329772814066877,1.2513066322291171,1.269635983051546,1.2879653338739754,1.3062946846964043,1.3246240355188337,1.3429533863412626,1.3612827371636917,1.3796120879861209,1.39794143880855,1.4162707896309792,1.4346001404534083,1.4529294912758375,1.4712588420982666,1.4895881929206958,1.5079175437431249,1.5262468945655541,1.5445762453879832,1.5629055962104124,1.5812349470328415,1.5995642978552707,1.6178936486776996,1.6362229995001289,1.6545523503225579,1.6728817011449872,1.6912110519674162,1.7095404027898455,1.7278697536122745,1.7461991044347038,1.7645284552571328,1.7828578060795621,1.801187156901991,1.8195165077244204,1.8378458585468493,1.8561752093692787,1.8745045601917076,1.892833911014137,1.9111632618365659,1.9294926126589953,1.9478219634814242,1.9661513143038536,1.9844806651262825,2.0028100159487119,2.0211393667711408,2.0394687175935697],\"y\":[0.6522815815238836,0.67629165934164248,0.70030173715940147,0.72431181497716046,0.74832189279491945,0.77233197061267844,0.79634204843043743,0.8203521262481962,0.84436220406595519,0.86837228188371418,0.89238235970147317,0.91639243751923216,0.94040251533699115,0.96441259315475014,0.98842267097250913,1.012432748790268,1.036442826608027,1.060452904425786,1.084462982243545,1.108473060061304,1.132483137879063,1.156493215696822,1.1805032935145809,1.2045133713323399,1.2285234491500989,1.2525335269678579,1.2765436047856169,1.3005536826033759,1.3245637604211347,1.3485738382388934,1.3725839160566526,1.3965939938744114,1.4206040716921706,1.4446141495099294,1.4686242273276886,1.4926343051454474,1.5166443829632066,1.5406544607809654,1.5646645385987246,1.5886746164164833,1.6126846942342425,1.6366947720520011,1.6607048498697601,1.6847149276875191,1.7087250055052781,1.7327350833230371,1.756745161140796,1.780755238958555,1.804765316776314,1.828775394594073,1.852785472411832,1.876795550229591,1.90080562804735,1.924815705865109,1.948825783682868,1.972835861500627,1.9968459393183855,2.0208560171361447,2.0448660949539037,2.0688761727716627,2.0928862505894217,2.1168963284071807,2.1409064062249392,2.1649164840426987,2.1889265618604572,2.2129366396782166,2.2369467174959752,2.2609567953137346,2.2849668731314932,2.3089769509492526,2.3329870287670111,2.3569971065847706,2.3810071844025291,2.4050172622202886,2.4290273400380471,2.4530374178558065,2.4770474956735651,2.5010575734913245,2.5250676513090831,2.5490777291268416],\"text\":[\"logpm25: 0.5914500<br />NocturnalSympt: 0.6522816<br />bmicat: overweight\",\"logpm25: 0.6097794<br />NocturnalSympt: 0.6762917<br />bmicat: overweight\",\"logpm25: 0.6281087<br />NocturnalSympt: 0.7003017<br />bmicat: overweight\",\"logpm25: 0.6464381<br />NocturnalSympt: 0.7243118<br />bmicat: overweight\",\"logpm25: 0.6647674<br />NocturnalSympt: 0.7483219<br />bmicat: overweight\",\"logpm25: 0.6830968<br />NocturnalSympt: 0.7723320<br />bmicat: overweight\",\"logpm25: 0.7014261<br />NocturnalSympt: 0.7963420<br />bmicat: overweight\",\"logpm25: 0.7197555<br />NocturnalSympt: 0.8203521<br />bmicat: overweight\",\"logpm25: 0.7380848<br />NocturnalSympt: 0.8443622<br />bmicat: overweight\",\"logpm25: 0.7564142<br />NocturnalSympt: 0.8683723<br />bmicat: overweight\",\"logpm25: 0.7747435<br />NocturnalSympt: 0.8923824<br />bmicat: overweight\",\"logpm25: 0.7930729<br />NocturnalSympt: 0.9163924<br />bmicat: overweight\",\"logpm25: 0.8114022<br />NocturnalSympt: 0.9404025<br />bmicat: overweight\",\"logpm25: 0.8297316<br />NocturnalSympt: 0.9644126<br />bmicat: overweight\",\"logpm25: 0.8480609<br />NocturnalSympt: 0.9884227<br />bmicat: overweight\",\"logpm25: 0.8663903<br />NocturnalSympt: 1.0124327<br />bmicat: overweight\",\"logpm25: 0.8847196<br />NocturnalSympt: 1.0364428<br />bmicat: overweight\",\"logpm25: 0.9030490<br />NocturnalSympt: 1.0604529<br />bmicat: overweight\",\"logpm25: 0.9213783<br />NocturnalSympt: 1.0844630<br />bmicat: overweight\",\"logpm25: 0.9397077<br />NocturnalSympt: 1.1084731<br />bmicat: overweight\",\"logpm25: 0.9580370<br />NocturnalSympt: 1.1324831<br />bmicat: overweight\",\"logpm25: 0.9763664<br />NocturnalSympt: 1.1564932<br />bmicat: overweight\",\"logpm25: 0.9946957<br />NocturnalSympt: 1.1805033<br />bmicat: overweight\",\"logpm25: 1.0130251<br />NocturnalSympt: 1.2045134<br />bmicat: overweight\",\"logpm25: 1.0313544<br />NocturnalSympt: 1.2285234<br />bmicat: overweight\",\"logpm25: 1.0496838<br />NocturnalSympt: 1.2525335<br />bmicat: overweight\",\"logpm25: 1.0680131<br />NocturnalSympt: 1.2765436<br />bmicat: overweight\",\"logpm25: 1.0863425<br />NocturnalSympt: 1.3005537<br />bmicat: overweight\",\"logpm25: 1.1046718<br />NocturnalSympt: 1.3245638<br />bmicat: overweight\",\"logpm25: 1.1230012<br />NocturnalSympt: 1.3485738<br />bmicat: overweight\",\"logpm25: 1.1413305<br />NocturnalSympt: 1.3725839<br />bmicat: overweight\",\"logpm25: 1.1596599<br />NocturnalSympt: 1.3965940<br />bmicat: overweight\",\"logpm25: 1.1779892<br />NocturnalSympt: 1.4206041<br />bmicat: overweight\",\"logpm25: 1.1963186<br />NocturnalSympt: 1.4446141<br />bmicat: overweight\",\"logpm25: 1.2146479<br />NocturnalSympt: 1.4686242<br />bmicat: overweight\",\"logpm25: 1.2329773<br />NocturnalSympt: 1.4926343<br />bmicat: overweight\",\"logpm25: 1.2513066<br />NocturnalSympt: 1.5166444<br />bmicat: overweight\",\"logpm25: 1.2696360<br />NocturnalSympt: 1.5406545<br />bmicat: overweight\",\"logpm25: 1.2879653<br />NocturnalSympt: 1.5646645<br />bmicat: overweight\",\"logpm25: 1.3062947<br />NocturnalSympt: 1.5886746<br />bmicat: overweight\",\"logpm25: 1.3246240<br />NocturnalSympt: 1.6126847<br />bmicat: overweight\",\"logpm25: 1.3429534<br />NocturnalSympt: 1.6366948<br />bmicat: overweight\",\"logpm25: 1.3612827<br />NocturnalSympt: 1.6607048<br />bmicat: overweight\",\"logpm25: 1.3796121<br />NocturnalSympt: 1.6847149<br />bmicat: overweight\",\"logpm25: 1.3979414<br />NocturnalSympt: 1.7087250<br />bmicat: overweight\",\"logpm25: 1.4162708<br />NocturnalSympt: 1.7327351<br />bmicat: overweight\",\"logpm25: 1.4346001<br />NocturnalSympt: 1.7567452<br />bmicat: overweight\",\"logpm25: 1.4529295<br />NocturnalSympt: 1.7807552<br />bmicat: overweight\",\"logpm25: 1.4712588<br />NocturnalSympt: 1.8047653<br />bmicat: overweight\",\"logpm25: 1.4895882<br />NocturnalSympt: 1.8287754<br />bmicat: overweight\",\"logpm25: 1.5079175<br />NocturnalSympt: 1.8527855<br />bmicat: overweight\",\"logpm25: 1.5262469<br />NocturnalSympt: 1.8767956<br />bmicat: overweight\",\"logpm25: 1.5445762<br />NocturnalSympt: 1.9008056<br />bmicat: overweight\",\"logpm25: 1.5629056<br />NocturnalSympt: 1.9248157<br />bmicat: overweight\",\"logpm25: 1.5812349<br />NocturnalSympt: 1.9488258<br />bmicat: overweight\",\"logpm25: 1.5995643<br />NocturnalSympt: 1.9728359<br />bmicat: overweight\",\"logpm25: 1.6178936<br />NocturnalSympt: 1.9968459<br />bmicat: overweight\",\"logpm25: 1.6362230<br />NocturnalSympt: 2.0208560<br />bmicat: overweight\",\"logpm25: 1.6545524<br />NocturnalSympt: 2.0448661<br />bmicat: overweight\",\"logpm25: 1.6728817<br />NocturnalSympt: 2.0688762<br />bmicat: overweight\",\"logpm25: 1.6912111<br />NocturnalSympt: 2.0928863<br />bmicat: overweight\",\"logpm25: 1.7095404<br />NocturnalSympt: 2.1168963<br />bmicat: overweight\",\"logpm25: 1.7278698<br />NocturnalSympt: 2.1409064<br />bmicat: overweight\",\"logpm25: 1.7461991<br />NocturnalSympt: 2.1649165<br />bmicat: overweight\",\"logpm25: 1.7645285<br />NocturnalSympt: 2.1889266<br />bmicat: overweight\",\"logpm25: 1.7828578<br />NocturnalSympt: 2.2129366<br />bmicat: overweight\",\"logpm25: 1.8011872<br />NocturnalSympt: 2.2369467<br />bmicat: overweight\",\"logpm25: 1.8195165<br />NocturnalSympt: 2.2609568<br />bmicat: overweight\",\"logpm25: 1.8378459<br />NocturnalSympt: 2.2849669<br />bmicat: overweight\",\"logpm25: 1.8561752<br />NocturnalSympt: 2.3089770<br />bmicat: overweight\",\"logpm25: 1.8745046<br />NocturnalSympt: 2.3329870<br />bmicat: overweight\",\"logpm25: 1.8928339<br />NocturnalSympt: 2.3569971<br />bmicat: overweight\",\"logpm25: 1.9111633<br />NocturnalSympt: 2.3810072<br />bmicat: overweight\",\"logpm25: 1.9294926<br />NocturnalSympt: 2.4050173<br />bmicat: overweight\",\"logpm25: 1.9478220<br />NocturnalSympt: 2.4290273<br />bmicat: overweight\",\"logpm25: 1.9661513<br />NocturnalSympt: 2.4530374<br />bmicat: overweight\",\"logpm25: 1.9844807<br />NocturnalSympt: 2.4770475<br />bmicat: overweight\",\"logpm25: 2.0028100<br />NocturnalSympt: 2.5010576<br />bmicat: overweight\",\"logpm25: 2.0211394<br />NocturnalSympt: 2.5250677<br />bmicat: overweight\",\"logpm25: 2.0394687<br />NocturnalSympt: 2.5490777<br />bmicat: overweight\"],\"type\":\"scatter\",\"mode\":\"lines\",\"name\":\"overweight\",\"line\":{\"width\":7.559055118110237,\"color\":\"rgba(19,128,161,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"legendgroup\":\"overweight\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":26.228310502283108,\"r\":7.3059360730593621,\"b\":40.182648401826498,\"l\":31.415525114155255},\"plot_bgcolor\":\"rgba(235,235,235,1)\",\"paper_bgcolor\":\"rgba(255,255,255,1)\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[0.44737070601913337,2.3163079365812171],\"tickmode\":\"array\",\"ticktext\":[\"0.5\",\"1.0\",\"1.5\",\"2.0\"],\"tickvals\":[0.5,1,1.5,2],\"categoryorder\":\"array\",\"categoryarray\":[\"0.5\",\"1.0\",\"1.5\",\"2.0\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.66417600664176002,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(255,255,255,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"logpm25\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[-0.30000000000000004,6.2999999999999998],\"tickmode\":\"array\",\"ticktext\":[\"0\",\"2\",\"4\",\"6\"],\"tickvals\":[0,1.9999999999999998,4,6],\"categoryorder\":\"array\",\"categoryarray\":[\"0\",\"2\",\"4\",\"6\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.66417600664176002,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(255,255,255,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"NocturnalSympt\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":true,\"legend\":{\"bgcolor\":\"rgba(255,255,255,1)\",\"bordercolor\":\"transparent\",\"borderwidth\":1.8897637795275593,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.68949771689498},\"title\":{\"text\":\"bmicat\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}}},\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"7fb375e66aaa\":{\"x\":{},\"y\":{},\"colour\":{},\"type\":\"scatter\"},\"7fb36a64fb5e\":{\"x\":{},\"y\":{},\"colour\":{}}},\"cur_data\":\"7fb375e66aaa\",\"visdat\":{\"7fb375e66aaa\":[\"function (y) \",\"x\"],\"7fb36a64fb5e\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\nBecause `ggplot2::ggplot()` actually returns an object, we can use `plotly::ggplotly()` instead of the `print()` methods from `ggplot2` to take the data, aesthetic mappings, etc that we have defined and visualize them in a different graphical system such as `plotly`. Base R plotting functions do not return objects and we thus cannot easily change the graphical system we are using.\n\n# Visual impairments\n\nSimilar to how `plotly::ggplotly()` benefited from having access to the `gg` + `ggplot` objects, there is a great GitHub package called `colorblindr` that can help us simulate different visual impairments. It is available from <https://github.com/clauswilke/colorblindr>.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## Install colorblindr from GitHub\nremotes::install_github(\"clauswilke/colorblindr\")\n```\n:::\n\n\nWe can use the `cvd_grid()` function to plot a given `ggplot` object with colors that simulate deutanomaly, trianomaly, protanomaly, and also show the colors in their desaturated scale. That way, you can get an approximate idea to what individuals with these visual impairments see. Then if you cannot differentiate the colors, you know that they likely won't be able to differentiate them either.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolorblindr::cvd_grid(g_complete)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-29-1.png){width=672}\n:::\n:::\n\n\nAt <https://github.com/LieberInstitute/Visium_SPG_AD/blob/master/plots/09_pathology_vs_BayesSpace/pathology_groups_colorblind.pdf> you can find an example of an actual use case for my work that I made with <https://github.com/LieberInstitute/Visium_SPG_AD/blob/master/code/09_pathology_vs_BayesSpace/04_label_pathology_spots.R>.\n\n# Post-lecture materials\n\n### Resources\n\n-   The *ggplot2* book by Hadley Wickham\n-   The *R Graphics Cookbook* by Winston Chang (examples in base plots and in `ggplot2`)\n-   [tidyverse web site](http://ggplot2.tidyverse.org)\n\n### More complex example with `ggplot2`\n\nNow you get the sense that plots in the `ggplot2` system are constructed by successively adding components to the plot, starting with the base dataset and maybe a scatterplot. In this section bleow, you can see a slightly more complicated example with an additional variable.\n\n<details>\n\n<summary>Click here for a slightly more complicated example with `ggplot()`.</summary>\n\nNow, we will ask the question\n\n> How does the relationship between PM2.5 and nocturnal symptoms vary by BMI category and nitrogen dioxide (NO2)?\n\nUnlike our previous BMI variable, NO2 is continuous, and so we need to make NO2 categorical so we can condition on it in the plotting. We can use the `cut()` function for this purpose. We will divide the NO2 variable into tertiles.\n\nFirst we need to calculate the tertiles with the `quantile()` function.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncutpoints <- quantile(maacs$logno2_new, seq(0, 1, length = 4), na.rm = TRUE)\n```\n:::\n\n\nThen we need to divide the original `logno2_new` variable into the ranges defined by the cut points computed above.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmaacs$no2tert <- cut(maacs$logno2_new, cutpoints)\n```\n:::\n\n\nThe `not2tert` variable is now a categorical factor variable containing 3 levels, indicating the ranges of NO2 (on the log scale).\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## See the levels of the newly created factor variable\nlevels(maacs$no2tert)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"(0.342,1.23]\" \"(1.23,1.47]\"  \"(1.47,2.17]\" \n```\n:::\n:::\n\n\nThe final plot shows the relationship between PM2.5 and nocturnal symptoms by BMI category and NO2 tertile.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## Setup ggplot with data frame\ng <- maacs %>%\n    ggplot(aes(logpm25, NocturnalSympt))\n\n## Add layers\ng + geom_point(alpha = 1 / 3) +\n    facet_grid(bmicat ~ no2tert) +\n    geom_smooth(method = \"lm\", se = FALSE, col = \"steelblue\") +\n    theme_bw(base_family = \"Avenir\", base_size = 10) +\n    labs(x = expression(\"log \" * PM[2.5])) +\n    labs(y = \"Nocturnal Symptoms\") +\n    labs(title = \"MAACS Cohort\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Avenir' not found, will use 'sans' instead\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Avenir' not found, will use 'sans' instead\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Avenir' not found, will use 'sans' instead\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Avenir' not found, will use 'sans' instead\n```\n:::\n\n::: {.cell-output-display}\n![PM2.5 and nocturnal symptoms by BMI category and NO2 tertile](index_files/figure-html/unnamed-chunk-33-1.png){width=864}\n:::\n:::\n\n\n</details>\n\n### Final Questions\n\nHere are some post-lecture questions to help you think about the material discussed.\n\n::: callout-note\n### Questions\n\n1.  What happens if you facet on a continuous variable?\n\n2.  Read `?facet_wrap`. What does `nrow` do? What does `ncol` do? What other options control the layout of the individual panels? Why doesn't `facet_grid()` have `nrow` and `ncol` arguments?\n\n3.  What geom would you use to draw a line chart? A boxplot? A histogram? An area chart?\n\n4.  What does `geom_col()` do? How is it different to `geom_bar()`?\n:::\n\n### Additional Resources\n\n::: callout-tip\n-   <https://r4ds.had.co.nz/data-visualisation>\n-   <https://rdpeng.github.io/Biostat776/lecture-the-ggplot2-plotting-system-part-2>\n:::\n\n# R session information\n\n\n::: {.cell}\n\n```{.r .cell-code}\noptions(width = 120)\nsessioninfo::session_info()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n─ Session info ───────────────────────────────────────────────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.3.1 (2023-06-16)\n os       macOS Ventura 13.5.2\n system   aarch64, darwin20\n ui       X11\n language (EN)\n collate  en_US.UTF-8\n ctype    en_US.UTF-8\n tz       America/New_York\n date     2023-09-14\n pandoc   3.1.5 @ /opt/homebrew/bin/ (via rmarkdown)\n\n─ Packages ───────────────────────────────────────────────────────────────────────────────────────────────────────────\n package        * version    date (UTC) lib source\n bbplot           0.2        2023-09-14 [1] Github (bbc/bbplot@82af595)\n bit              4.0.5      2022-11-15 [1] CRAN (R 4.3.0)\n bit64            4.0.5      2020-08-30 [1] CRAN (R 4.3.0)\n cli              3.6.1      2023-03-23 [1] CRAN (R 4.3.0)\n colorblindr      0.1.0      2023-05-06 [1] Github (clauswilke/colorblindr@e6730be)\n colorout         1.2-2      2023-05-06 [1] Github (jalvesaq/colorout@79931fd)\n colorspace       2.1-0      2023-01-23 [1] CRAN (R 4.3.0)\n cowplot          1.1.1      2020-12-30 [1] CRAN (R 4.3.0)\n crayon           1.5.2      2022-09-29 [1] CRAN (R 4.3.0)\n crosstalk        1.2.0      2021-11-04 [1] CRAN (R 4.3.0)\n curl             5.0.2      2023-08-14 [1] CRAN (R 4.3.1)\n data.table       1.14.8     2023-02-17 [1] CRAN (R 4.3.0)\n digest           0.6.33     2023-07-07 [1] CRAN (R 4.3.0)\n dplyr          * 1.1.3      2023-09-03 [1] CRAN (R 4.3.0)\n ellipsis         0.3.2      2021-04-29 [1] CRAN (R 4.3.0)\n evaluate         0.21       2023-05-05 [1] CRAN (R 4.3.0)\n fansi            1.0.4      2023-01-22 [1] CRAN (R 4.3.0)\n farver           2.1.1      2022-07-06 [1] CRAN (R 4.3.0)\n fastmap          1.1.1      2023-02-24 [1] CRAN (R 4.3.0)\n forcats        * 1.0.0      2023-01-29 [1] CRAN (R 4.3.0)\n generics         0.1.3      2022-07-05 [1] CRAN (R 4.3.0)\n ggplot2        * 3.4.3      2023-08-14 [1] CRAN (R 4.3.0)\n ggthemes         4.2.4      2021-01-20 [1] CRAN (R 4.3.0)\n glue             1.6.2      2022-02-24 [1] CRAN (R 4.3.0)\n gtable           0.3.4      2023-08-21 [1] CRAN (R 4.3.0)\n here           * 1.0.1      2020-12-13 [1] CRAN (R 4.3.0)\n hms              1.1.3      2023-03-21 [1] CRAN (R 4.3.0)\n htmltools        0.5.6      2023-08-10 [1] CRAN (R 4.3.0)\n htmlwidgets      1.6.2      2023-03-17 [1] CRAN (R 4.3.0)\n httr             1.4.7      2023-08-15 [1] CRAN (R 4.3.0)\n jsonlite         1.8.7      2023-06-29 [1] CRAN (R 4.3.0)\n knitr            1.43       2023-05-25 [1] CRAN (R 4.3.0)\n labeling         0.4.3      2023-08-29 [1] CRAN (R 4.3.0)\n lattice          0.21-8     2023-04-05 [1] CRAN (R 4.3.1)\n lazyeval         0.2.2      2019-03-15 [1] CRAN (R 4.3.0)\n lifecycle        1.0.3      2022-10-07 [1] CRAN (R 4.3.0)\n lubridate      * 1.9.2      2023-02-10 [1] CRAN (R 4.3.0)\n magrittr         2.0.3      2022-03-30 [1] CRAN (R 4.3.0)\n Matrix           1.6-1      2023-08-14 [1] CRAN (R 4.3.0)\n mgcv             1.9-0      2023-07-11 [1] CRAN (R 4.3.0)\n munsell          0.5.0      2018-06-12 [1] CRAN (R 4.3.0)\n nlme             3.1-163    2023-08-09 [1] CRAN (R 4.3.0)\n palmerpenguins * 0.1.1      2022-08-15 [1] CRAN (R 4.3.0)\n pillar           1.9.0      2023-03-22 [1] CRAN (R 4.3.0)\n pkgconfig        2.0.3      2019-09-22 [1] CRAN (R 4.3.0)\n plotly           4.10.2     2023-06-03 [1] CRAN (R 4.3.0)\n purrr          * 1.0.2      2023-08-10 [1] CRAN (R 4.3.0)\n R6               2.5.1      2021-08-19 [1] CRAN (R 4.3.0)\n readr          * 2.1.4      2023-02-10 [1] CRAN (R 4.3.0)\n rlang            1.1.1      2023-04-28 [1] CRAN (R 4.3.0)\n rmarkdown        2.24       2023-08-14 [1] CRAN (R 4.3.1)\n rprojroot        2.0.3      2022-04-02 [1] CRAN (R 4.3.0)\n rstudioapi       0.15.0     2023-07-07 [1] CRAN (R 4.3.0)\n scales           1.2.1      2022-08-20 [1] CRAN (R 4.3.0)\n sessioninfo      1.2.2      2021-12-06 [1] CRAN (R 4.3.0)\n showtext         0.9-6      2023-05-03 [1] CRAN (R 4.3.0)\n showtextdb       3.0        2020-06-04 [1] CRAN (R 4.3.0)\n stringi          1.7.12     2023-01-11 [1] CRAN (R 4.3.0)\n stringr        * 1.5.0      2022-12-02 [1] CRAN (R 4.3.0)\n sysfonts         0.8.8      2022-03-13 [1] CRAN (R 4.3.0)\n ThemePark        0.0.0.9000 2023-09-14 [1] Github (MatthewBJane/theme_park@dbf98c5)\n tibble         * 3.2.1      2023-03-20 [1] CRAN (R 4.3.0)\n tidyr          * 1.3.0      2023-01-24 [1] CRAN (R 4.3.0)\n tidyselect       1.2.0      2022-10-10 [1] CRAN (R 4.3.0)\n tidyverse      * 2.0.0      2023-02-22 [1] CRAN (R 4.3.0)\n timechange       0.2.0      2023-01-11 [1] CRAN (R 4.3.0)\n tzdb             0.4.0      2023-05-12 [1] CRAN (R 4.3.0)\n utf8             1.2.3      2023-01-31 [1] CRAN (R 4.3.0)\n vctrs            0.6.3      2023-06-14 [1] CRAN (R 4.3.0)\n viridisLite      0.4.2      2023-05-02 [1] CRAN (R 4.3.0)\n vroom            1.6.3      2023-04-28 [1] CRAN (R 4.3.0)\n withr            2.5.0      2022-03-03 [1] CRAN (R 4.3.0)\n xfun             0.40       2023-08-09 [1] CRAN (R 4.3.0)\n yaml             2.3.7      2023-01-23 [1] CRAN (R 4.3.0)\n\n [1] /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/library\n\n──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n```\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/htmlwidgets-1.6.2/htmlwidgets.js\"></script>\n<script src=\"../../site_libs/plotly-binding-4.10.2/plotly.js\"></script>\n<script src=\"../../site_libs/typedarray-0.1/typedarray.min.js\"></script>\n<script src=\"../../site_libs/jquery-3.5.1/jquery.min.js\"></script>\n<link href=\"../../site_libs/crosstalk-1.2.0/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/crosstalk-1.2.0/js/crosstalk.min.js\"></script>\n<link href=\"../../site_libs/plotly-htmlwidgets-css-2.11.1/plotly-htmlwidgets.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/plotly-main-2.11.1/plotly-latest.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}